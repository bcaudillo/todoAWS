{"ast":null,"code":"export var StoreType = {\n  Cookie: 'cookie',\n  LocalStorage: 'localStorage',\n  Memory: 'memory'\n};","map":{"version":3,"names":["StoreType","Cookie","LocalStorage","Memory"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/core/storage/types.ts"],"sourcesContent":["import { CookieOptions } from './cookieStorage'\n\nexport const StoreType = {\n  Cookie: 'cookie',\n  LocalStorage: 'localStorage',\n  Memory: 'memory',\n} as const\n\n/**\n * Known Storage Types\n *\n * Convenience settings for storage systems that AJS includes support for\n */\nexport type StoreType = typeof StoreType[keyof typeof StoreType]\n\nexport type StorageObject = Record<string, unknown>\n\n/**\n * Defines a Storage object for use in AJS Client.\n */\nexport interface Store<Data extends StorageObject = StorageObject> {\n  /**\n   * get value for the key from the stores. it will return the first value found in the stores\n   * @param key key for the value to be retrieved\n   * @returns value for the key or null if not found\n   */\n  get<K extends keyof Data>(key: K): Data[K] | null\n\n  /**\n   * it will set the value for the key in all the stores\n   * @param key key for the value to be stored\n   * @param value value to be stored\n   * @returns value that was stored\n   */\n  set<K extends keyof Data>(key: K, value: Data[K] | null): void\n  /**\n   * remove the value for the key from all the stores\n   * @param key key for the value to be removed\n   * @param storeTypes optional array of store types to be used for removing the value\n   */\n  remove<K extends keyof Data>(key: K): void\n}\n\nexport interface StoreTypeWithSettings<T extends StoreType = StoreType> {\n  name: T\n  settings?: T extends 'cookie' ? CookieOptions : never\n}\n\nexport type InitializeStorageArgs = (StoreTypeWithSettings | StoreType)[]\n"],"mappings":"AAEA,OAAO,IAAMA,SAAS,GAAG;EACvBC,MAAM,EAAE,QAAQ;EAChBC,YAAY,EAAE,cAAc;EAC5BC,MAAM,EAAE;CACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}