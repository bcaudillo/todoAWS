{"ast":null,"code":"import { Alias, Facade, Group, Identify, Page, Screen, Track } from '@segment/facade';\nexport function toFacade(evt, options) {\n  var fcd = new Facade(evt, options);\n  if (evt.type === 'track') {\n    fcd = new Track(evt, options);\n  }\n  if (evt.type === 'identify') {\n    fcd = new Identify(evt, options);\n  }\n  if (evt.type === 'page') {\n    fcd = new Page(evt, options);\n  }\n  if (evt.type === 'alias') {\n    fcd = new Alias(evt, options);\n  }\n  if (evt.type === 'group') {\n    fcd = new Group(evt, options);\n  }\n  if (evt.type === 'screen') {\n    fcd = new Screen(evt, options);\n  }\n  Object.defineProperty(fcd, 'obj', {\n    value: evt,\n    writable: true\n  });\n  return fcd;\n}","map":{"version":3,"names":["Alias","Facade","Group","Identify","Page","Screen","Track","toFacade","evt","options","fcd","type","Object","defineProperty","value","writable"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/lib/to-facade.ts"],"sourcesContent":["import {\n  Alias,\n  Facade,\n  Group,\n  Identify,\n  Options,\n  Page,\n  Screen,\n  Track,\n} from '@segment/facade'\nimport { SegmentEvent } from '../core/events'\n\nexport type SegmentFacade = Facade<SegmentEvent> & {\n  obj: SegmentEvent\n}\n\nexport function toFacade(evt: SegmentEvent, options?: Options): SegmentFacade {\n  let fcd = new Facade(evt, options)\n\n  if (evt.type === 'track') {\n    fcd = new Track(evt, options)\n  }\n\n  if (evt.type === 'identify') {\n    fcd = new Identify(evt, options)\n  }\n\n  if (evt.type === 'page') {\n    fcd = new Page(evt, options)\n  }\n\n  if (evt.type === 'alias') {\n    fcd = new Alias(evt, options)\n  }\n\n  if (evt.type === 'group') {\n    fcd = new Group(evt, options)\n  }\n\n  if (evt.type === 'screen') {\n    fcd = new Screen(evt, options)\n  }\n\n  Object.defineProperty(fcd, 'obj', {\n    value: evt,\n    writable: true,\n  })\n\n  return fcd as SegmentFacade\n}\n"],"mappings":"AAAA,SACEA,KAAK,EACLC,MAAM,EACNC,KAAK,EACLC,QAAQ,EAERC,IAAI,EACJC,MAAM,EACNC,KAAK,QACA,iBAAiB;AAOxB,OAAM,SAAUC,QAAQA,CAACC,GAAiB,EAAEC,OAAiB;EAC3D,IAAIC,GAAG,GAAG,IAAIT,MAAM,CAACO,GAAG,EAAEC,OAAO,CAAC;EAElC,IAAID,GAAG,CAACG,IAAI,KAAK,OAAO,EAAE;IACxBD,GAAG,GAAG,IAAIJ,KAAK,CAACE,GAAG,EAAEC,OAAO,CAAC;;EAG/B,IAAID,GAAG,CAACG,IAAI,KAAK,UAAU,EAAE;IAC3BD,GAAG,GAAG,IAAIP,QAAQ,CAACK,GAAG,EAAEC,OAAO,CAAC;;EAGlC,IAAID,GAAG,CAACG,IAAI,KAAK,MAAM,EAAE;IACvBD,GAAG,GAAG,IAAIN,IAAI,CAACI,GAAG,EAAEC,OAAO,CAAC;;EAG9B,IAAID,GAAG,CAACG,IAAI,KAAK,OAAO,EAAE;IACxBD,GAAG,GAAG,IAAIV,KAAK,CAACQ,GAAG,EAAEC,OAAO,CAAC;;EAG/B,IAAID,GAAG,CAACG,IAAI,KAAK,OAAO,EAAE;IACxBD,GAAG,GAAG,IAAIR,KAAK,CAACM,GAAG,EAAEC,OAAO,CAAC;;EAG/B,IAAID,GAAG,CAACG,IAAI,KAAK,QAAQ,EAAE;IACzBD,GAAG,GAAG,IAAIL,MAAM,CAACG,GAAG,EAAEC,OAAO,CAAC;;EAGhCG,MAAM,CAACC,cAAc,CAACH,GAAG,EAAE,KAAK,EAAE;IAChCI,KAAK,EAAEN,GAAG;IACVO,QAAQ,EAAE;GACX,CAAC;EAEF,OAAOL,GAAoB;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}