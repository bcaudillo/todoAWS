{"ast":null,"code":"export function recordIntegrationMetric(ctx, _a) {\n  var methodName = _a.methodName,\n    integrationName = _a.integrationName,\n    type = _a.type,\n    _b = _a.didError,\n    didError = _b === void 0 ? false : _b;\n  ctx.stats.increment(\"analytics_js.integration.invoke\".concat(didError ? '.error' : ''), 1, [\"method:\".concat(methodName), \"integration_name:\".concat(integrationName), \"type:\".concat(type)]);\n}","map":{"version":3,"names":["recordIntegrationMetric","ctx","_a","methodName","integrationName","type","_b","didError","stats","increment","concat"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/core/stats/metric-helpers.ts"],"sourcesContent":["import { Context } from '../context'\n\nexport interface RecordIntegrationMetricProps {\n  integrationName: string\n  methodName: string\n  didError?: boolean\n  type: 'classic' | 'action'\n}\n\nexport function recordIntegrationMetric(\n  ctx: Context,\n  {\n    methodName,\n    integrationName,\n    type,\n    didError = false,\n  }: RecordIntegrationMetricProps\n): void {\n  ctx.stats.increment(\n    `analytics_js.integration.invoke${didError ? '.error' : ''}`,\n    1,\n    [\n      `method:${methodName}`,\n      `integration_name:${integrationName}`,\n      `type:${type}`,\n    ]\n  )\n}\n"],"mappings":"AASA,OAAM,SAAUA,uBAAuBA,CACrCC,GAAY,EACZC,EAK+B;MAJ7BC,UAAU,GAAAD,EAAA,CAAAC,UAAA;IACVC,eAAe,GAAAF,EAAA,CAAAE,eAAA;IACfC,IAAI,GAAAH,EAAA,CAAAG,IAAA;IACJC,EAAA,GAAAJ,EAAA,CAAAK,QAAgB;IAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;EAGlBL,GAAG,CAACO,KAAK,CAACC,SAAS,CACjB,kCAAAC,MAAA,CAAkCH,QAAQ,GAAG,QAAQ,GAAG,EAAE,CAAE,EAC5D,CAAC,EACD,CACE,UAAAG,MAAA,CAAUP,UAAU,CAAE,EACtB,oBAAAO,MAAA,CAAoBN,eAAe,CAAE,EACrC,QAAAM,MAAA,CAAQL,IAAI,CAAE,CACf,CACF;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}