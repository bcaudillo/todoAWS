{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { pick } from '../../lib/pick';\nimport { getDefaultPageContext } from './get-page-context';\n/**\n * Augments a segment event with information about the current page.\n * Page information like URL changes frequently, so this is meant to be captured as close to the event call as possible.\n * Things like `userAgent` do not change, so they can be added later in the flow.\n * We prefer not to add this information to this function, as it increases the main bundle size.\n */\nexport var addPageContext = function (event, pageCtx) {\n  if (pageCtx === void 0) {\n    pageCtx = getDefaultPageContext();\n  }\n  var evtCtx = event.context; // Context should be set earlier in the flow\n  var pageContextFromEventProps;\n  if (event.type === 'page') {\n    pageContextFromEventProps = event.properties && pick(event.properties, Object.keys(pageCtx));\n    event.properties = __assign(__assign(__assign({}, pageCtx), event.properties), event.name ? {\n      name: event.name\n    } : {});\n  }\n  evtCtx.page = __assign(__assign(__assign({}, pageCtx), pageContextFromEventProps), evtCtx.page);\n};","map":{"version":3,"names":["pick","getDefaultPageContext","addPageContext","event","pageCtx","evtCtx","context","pageContextFromEventProps","type","properties","Object","keys","__assign","name","page"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/core/page/add-page-context.ts"],"sourcesContent":["import { pick } from '../../lib/pick'\nimport { EventProperties, SegmentEvent } from '../events'\nimport { getDefaultPageContext } from './get-page-context'\n\n/**\n * Augments a segment event with information about the current page.\n * Page information like URL changes frequently, so this is meant to be captured as close to the event call as possible.\n * Things like `userAgent` do not change, so they can be added later in the flow.\n * We prefer not to add this information to this function, as it increases the main bundle size.\n */\nexport const addPageContext = (\n  event: SegmentEvent,\n  pageCtx = getDefaultPageContext()\n): void => {\n  const evtCtx = event.context! // Context should be set earlier in the flow\n  let pageContextFromEventProps: Pick<EventProperties, string> | undefined\n  if (event.type === 'page') {\n    pageContextFromEventProps =\n      event.properties && pick(event.properties, Object.keys(pageCtx))\n\n    event.properties = {\n      ...pageCtx,\n      ...event.properties,\n      ...(event.name ? { name: event.name } : {}),\n    }\n  }\n\n  evtCtx.page = {\n    ...pageCtx,\n    ...pageContextFromEventProps,\n    ...evtCtx.page,\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,gBAAgB;AAErC,SAASC,qBAAqB,QAAQ,oBAAoB;AAE1D;;;;;;AAMA,OAAO,IAAMC,cAAc,GAAG,SAAAA,CAC5BC,KAAmB,EACnBC,OAAiC;EAAjC,IAAAA,OAAA;IAAAA,OAAA,GAAUH,qBAAqB,EAAE;EAAA;EAEjC,IAAMI,MAAM,GAAGF,KAAK,CAACG,OAAQ,EAAC;EAC9B,IAAIC,yBAAoE;EACxE,IAAIJ,KAAK,CAACK,IAAI,KAAK,MAAM,EAAE;IACzBD,yBAAyB,GACvBJ,KAAK,CAACM,UAAU,IAAIT,IAAI,CAACG,KAAK,CAACM,UAAU,EAAEC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAAC;IAElED,KAAK,CAACM,UAAU,GAAAG,QAAA,CAAAA,QAAA,CAAAA,QAAA,KACXR,OAAO,GACPD,KAAK,CAACM,UAAU,GACfN,KAAK,CAACU,IAAI,GAAG;MAAEA,IAAI,EAAEV,KAAK,CAACU;IAAI,CAAE,GAAG,EAAG,CAC5C;;EAGHR,MAAM,CAACS,IAAI,GAAAF,QAAA,CAAAA,QAAA,CAAAA,QAAA,KACNR,OAAO,GACPG,yBAAyB,GACzBF,MAAM,CAACS,IAAI,CACf;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}