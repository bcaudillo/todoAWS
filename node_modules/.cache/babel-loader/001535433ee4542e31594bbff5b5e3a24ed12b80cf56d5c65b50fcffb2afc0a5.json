{"ast":null,"code":"import { isFunction, isPlainObject, isString, isNumber } from '@segment/analytics-core';\n/**\n * Helper for the track method\n */\nexport function resolveArguments(eventName, properties, options, callback) {\n  var _a;\n  var args = [eventName, properties, options, callback];\n  var name = isPlainObject(eventName) ? eventName.event : eventName;\n  if (!name || !isString(name)) {\n    throw new Error('Event missing');\n  }\n  var data = isPlainObject(eventName) ? (_a = eventName.properties) !== null && _a !== void 0 ? _a : {} : isPlainObject(properties) ? properties : {};\n  var opts = {};\n  if (!isFunction(options)) {\n    opts = options !== null && options !== void 0 ? options : {};\n  }\n  if (isPlainObject(eventName) && !isFunction(properties)) {\n    opts = properties !== null && properties !== void 0 ? properties : {};\n  }\n  var cb = args.find(isFunction);\n  return [name, data, opts, cb];\n}\n/**\n * Helper for page, screen methods\n */\nexport function resolvePageArguments(category, name, properties, options, callback) {\n  var _a, _b;\n  var resolvedCategory = null;\n  var resolvedName = null;\n  var args = [category, name, properties, options, callback];\n  var strings = args.filter(isString);\n  if (strings[0] !== undefined && strings[1] !== undefined) {\n    resolvedCategory = strings[0];\n    resolvedName = strings[1];\n  }\n  if (strings.length === 1) {\n    resolvedCategory = null;\n    resolvedName = strings[0];\n  }\n  var resolvedCallback = args.find(isFunction);\n  var objects = args.filter(function (obj) {\n    if (resolvedName === null) {\n      return isPlainObject(obj);\n    }\n    return isPlainObject(obj) || obj === null;\n  });\n  var resolvedProperties = (_a = objects[0]) !== null && _a !== void 0 ? _a : {};\n  var resolvedOptions = (_b = objects[1]) !== null && _b !== void 0 ? _b : {};\n  return [resolvedCategory, resolvedName, resolvedProperties, resolvedOptions, resolvedCallback];\n}\n/**\n * Helper for group, identify methods\n */\nexport var resolveUserArguments = function (user) {\n  return function () {\n    var _a, _b, _c;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var values = {};\n    // It's a stack so it's reversed so that we go through each of the expected arguments\n    var orderStack = ['callback', 'options', 'traits', 'id'];\n    // Read each argument and eval the possible values here\n    for (var _d = 0, args_1 = args; _d < args_1.length; _d++) {\n      var arg = args_1[_d];\n      var current = orderStack.pop();\n      if (current === 'id') {\n        if (isString(arg) || isNumber(arg)) {\n          values.id = arg.toString();\n          continue;\n        }\n        if (arg === null || arg === undefined) {\n          continue;\n        }\n        // First argument should always be the id, if it is not a valid value we can skip it\n        current = orderStack.pop();\n      }\n      // Traits and Options\n      if ((current === 'traits' || current === 'options') && (arg === null || arg === undefined || isPlainObject(arg))) {\n        values[current] = arg;\n      }\n      // Callback\n      if (isFunction(arg)) {\n        values.callback = arg;\n        break; // This is always the last argument\n      }\n    }\n    return [(_a = values.id) !== null && _a !== void 0 ? _a : user.id(), (_b = values.traits) !== null && _b !== void 0 ? _b : {}, (_c = values.options) !== null && _c !== void 0 ? _c : {}, values.callback];\n  };\n};\n/**\n * Helper for alias method\n */\nexport function resolveAliasArguments(to, from, options, callback) {\n  if (isNumber(to)) to = to.toString(); // Legacy behaviour - allow integers for alias calls\n  if (isNumber(from)) from = from.toString();\n  var args = [to, from, options, callback];\n  var _a = args.filter(isString),\n    _b = _a[0],\n    aliasTo = _b === void 0 ? to : _b,\n    _c = _a[1],\n    aliasFrom = _c === void 0 ? null : _c;\n  var _d = args.filter(isPlainObject)[0],\n    opts = _d === void 0 ? {} : _d;\n  var resolvedCallback = args.find(isFunction);\n  return [aliasTo, aliasFrom, opts, resolvedCallback];\n}","map":{"version":3,"names":["isFunction","isPlainObject","isString","isNumber","resolveArguments","eventName","properties","options","callback","args","name","event","Error","data","_a","opts","cb","find","resolvePageArguments","category","resolvedCategory","resolvedName","strings","filter","undefined","length","resolvedCallback","objects","obj","resolvedProperties","resolvedOptions","_b","resolveUserArguments","user","_i","arguments","values","orderStack","_d","args_1","arg","current","pop","id","toString","traits","_c","resolveAliasArguments","to","from","aliasTo","aliasFrom"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/core/arguments-resolver/index.ts"],"sourcesContent":["import {\n  isFunction,\n  isPlainObject,\n  isString,\n  isNumber,\n} from '@segment/analytics-core'\nimport { Context } from '../context'\nimport {\n  Callback,\n  JSONObject,\n  Options,\n  EventProperties,\n  SegmentEvent,\n  Traits,\n  GroupTraits,\n  UserTraits,\n} from '../events'\nimport { ID, User } from '../user'\n\n/**\n * Helper for the track method\n */\nexport function resolveArguments(\n  eventName: string | SegmentEvent,\n  properties?: EventProperties | Callback,\n  options?: Options | Callback,\n  callback?: Callback\n): [string, EventProperties | Callback, Options, Callback | undefined] {\n  const args = [eventName, properties, options, callback]\n\n  const name = isPlainObject(eventName) ? eventName.event : eventName\n  if (!name || !isString(name)) {\n    throw new Error('Event missing')\n  }\n\n  const data = isPlainObject(eventName)\n    ? eventName.properties ?? {}\n    : isPlainObject(properties)\n    ? properties\n    : {}\n\n  let opts: Options = {}\n  if (!isFunction(options)) {\n    opts = options ?? {}\n  }\n\n  if (isPlainObject(eventName) && !isFunction(properties)) {\n    opts = properties ?? {}\n  }\n\n  const cb = args.find(isFunction) as Callback | undefined\n  return [name, data, opts, cb]\n}\n\n/**\n * Helper for page, screen methods\n */\nexport function resolvePageArguments(\n  category?: string | object,\n  name?: string | object | Callback,\n  properties?: EventProperties | Options | Callback | null,\n  options?: Options | Callback,\n  callback?: Callback\n): [\n  string | null,\n  string | null,\n  EventProperties,\n  Options,\n  Callback | undefined\n] {\n  let resolvedCategory: string | undefined | null = null\n  let resolvedName: string | undefined | null = null\n  const args = [category, name, properties, options, callback]\n\n  const strings = args.filter(isString)\n  if (strings[0] !== undefined && strings[1] !== undefined) {\n    resolvedCategory = strings[0]\n    resolvedName = strings[1]\n  }\n\n  if (strings.length === 1) {\n    resolvedCategory = null\n    resolvedName = strings[0]\n  }\n\n  const resolvedCallback = args.find(isFunction) as Callback | undefined\n\n  const objects = args.filter((obj) => {\n    if (resolvedName === null) {\n      return isPlainObject(obj)\n    }\n    return isPlainObject(obj) || obj === null\n  }) as Array<JSONObject | null>\n\n  const resolvedProperties = (objects[0] ?? {}) as EventProperties\n  const resolvedOptions = (objects[1] ?? {}) as Options\n\n  return [\n    resolvedCategory,\n    resolvedName,\n    resolvedProperties,\n    resolvedOptions,\n    resolvedCallback,\n  ]\n}\n\n/**\n * Helper for group, identify methods\n */\nexport const resolveUserArguments = <T extends Traits, U extends User>(\n  user: U\n): ResolveUser<T> => {\n  return (...args): ReturnType<ResolveUser<T>> => {\n    const values: {\n      id?: ID\n      traits?: T | null\n      options?: Options\n      callback?: Callback\n    } = {}\n    // It's a stack so it's reversed so that we go through each of the expected arguments\n    const orderStack: Array<keyof typeof values> = [\n      'callback',\n      'options',\n      'traits',\n      'id',\n    ]\n\n    // Read each argument and eval the possible values here\n    for (const arg of args) {\n      let current = orderStack.pop()\n      if (current === 'id') {\n        if (isString(arg) || isNumber(arg)) {\n          values.id = arg.toString()\n          continue\n        }\n        if (arg === null || arg === undefined) {\n          continue\n        }\n        // First argument should always be the id, if it is not a valid value we can skip it\n        current = orderStack.pop()\n      }\n\n      // Traits and Options\n      if (\n        (current === 'traits' || current === 'options') &&\n        (arg === null || arg === undefined || isPlainObject(arg))\n      ) {\n        values[current] = arg as T\n      }\n\n      // Callback\n      if (isFunction(arg)) {\n        values.callback = arg as Callback\n        break // This is always the last argument\n      }\n    }\n\n    return [\n      values.id ?? user.id(),\n      (values.traits ?? {}) as T,\n      values.options ?? {},\n      values.callback,\n    ]\n  }\n}\n\n/**\n * Helper for alias method\n */\nexport function resolveAliasArguments(\n  to: string | number,\n  from?: string | number | Options,\n  options?: Options | Callback,\n  callback?: Callback\n): [string, string | null, Options, Callback | undefined] {\n  if (isNumber(to)) to = to.toString() // Legacy behaviour - allow integers for alias calls\n  if (isNumber(from)) from = from.toString()\n  const args = [to, from, options, callback]\n\n  const [aliasTo = to, aliasFrom = null] = args.filter(isString)\n  const [opts = {}] = args.filter(isPlainObject)\n  const resolvedCallback = args.find(isFunction) as Callback | undefined\n\n  return [aliasTo, aliasFrom, opts, resolvedCallback]\n}\n\ntype ResolveUser<T extends Traits> = (\n  id?: ID | object,\n  traits?: T | Callback | null,\n  options?: Options | Callback,\n  callback?: Callback\n) => [ID, T, Options, Callback | undefined]\n\nexport type IdentifyParams = Parameters<ResolveUser<UserTraits>>\nexport type GroupParams = Parameters<ResolveUser<GroupTraits>>\nexport type EventParams = Parameters<typeof resolveArguments>\nexport type PageParams = Parameters<typeof resolvePageArguments>\nexport type AliasParams = Parameters<typeof resolveAliasArguments>\n\nexport type DispatchedEvent = Context\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}