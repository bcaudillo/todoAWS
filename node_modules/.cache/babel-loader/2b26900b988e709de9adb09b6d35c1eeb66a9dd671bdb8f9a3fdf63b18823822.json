{"ast":null,"code":"import { __amplify } from '../types/index.mjs';\nimport { customOpFactory } from './operations/custom.mjs';\nconst operationTypeMap = {\n  queries: 'query',\n  mutations: 'mutation',\n  subscriptions: 'subscription'\n};\nfunction generateCustomOperationsProperty(client, config, operationsType) {\n  // some bundlers end up with `Amplify.configure` being called *after* generate client.\n  // if that occurs, we need to *not error* while we wait. handling for late configuration\n  // occurs in `generateClient()`. we do not need to subscribe to Hub events here.\n  if (!config) {\n    return {};\n  }\n  const modelIntrospection = config.modelIntrospection;\n  // model intro schema might be absent if there's not actually a configured GraphQL API\n  if (!modelIntrospection) {\n    return {};\n  }\n  // custom operations will be absent from model intro schema if no custom ops\n  // are present on the source schema.\n  const operations = modelIntrospection[operationsType];\n  if (!operations) {\n    return {};\n  }\n  const ops = {};\n  const useContext = client[__amplify] === null;\n  for (const operation of Object.values(operations)) {\n    ops[operation.name] = customOpFactory(client, modelIntrospection, operationTypeMap[operationsType], operation, useContext);\n  }\n  return ops;\n}\nfunction generateCustomMutationsProperty(client, config) {\n  return generateCustomOperationsProperty(client, config, 'mutations');\n}\nfunction generateCustomQueriesProperty(client, config) {\n  return generateCustomOperationsProperty(client, config, 'queries');\n}\nfunction generateCustomSubscriptionsProperty(client, config) {\n  return generateCustomOperationsProperty(client, config, 'subscriptions');\n}\nexport { generateCustomMutationsProperty, generateCustomOperationsProperty, generateCustomQueriesProperty, generateCustomSubscriptionsProperty };","map":{"version":3,"names":["operationTypeMap","queries","mutations","subscriptions","generateCustomOperationsProperty","client","config","operationsType","modelIntrospection","operations","ops","useContext","__amplify","operation","Object","values","name","customOpFactory","generateCustomMutationsProperty","generateCustomQueriesProperty","generateCustomSubscriptionsProperty"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@aws-amplify/api-graphql/src/internals/generateCustomOperationsProperty.ts"],"sourcesContent":["import { __amplify } from '../types';\nimport { customOpFactory } from './operations/custom';\nconst operationTypeMap = {\n    queries: 'query',\n    mutations: 'mutation',\n    subscriptions: 'subscription',\n};\nexport function generateCustomOperationsProperty(client, config, operationsType) {\n    // some bundlers end up with `Amplify.configure` being called *after* generate client.\n    // if that occurs, we need to *not error* while we wait. handling for late configuration\n    // occurs in `generateClient()`. we do not need to subscribe to Hub events here.\n    if (!config) {\n        return {};\n    }\n    const modelIntrospection = config.modelIntrospection;\n    // model intro schema might be absent if there's not actually a configured GraphQL API\n    if (!modelIntrospection) {\n        return {};\n    }\n    // custom operations will be absent from model intro schema if no custom ops\n    // are present on the source schema.\n    const operations = modelIntrospection[operationsType];\n    if (!operations) {\n        return {};\n    }\n    const ops = {};\n    const useContext = client[__amplify] === null;\n    for (const operation of Object.values(operations)) {\n        ops[operation.name] = customOpFactory(client, modelIntrospection, operationTypeMap[operationsType], operation, useContext);\n    }\n    return ops;\n}\nexport function generateCustomMutationsProperty(client, config) {\n    return generateCustomOperationsProperty(client, config, 'mutations');\n}\nexport function generateCustomQueriesProperty(client, config) {\n    return generateCustomOperationsProperty(client, config, 'queries');\n}\nexport function generateCustomSubscriptionsProperty(client, config) {\n    return generateCustomOperationsProperty(client, config, 'subscriptions');\n}\n"],"mappings":";;AAEA,MAAMA,gBAAgB,GAAG;EACrBC,OAAO,EAAE,OAAO;EAChBC,SAAS,EAAE,UAAU;EACrBC,aAAa,EAAE;AACnB,CAAC;AACM,SAASC,gCAAgCA,CAACC,MAAM,EAAEC,MAAM,EAAEC,cAAc,EAAE;EACjF;EACA;EACA;EACI,IAAI,CAACD,MAAM,EAAE;IACT,OAAO,EAAE;EACjB;EACI,MAAME,kBAAkB,GAAGF,MAAM,CAACE,kBAAkB;EACxD;EACI,IAAI,CAACA,kBAAkB,EAAE;IACrB,OAAO,EAAE;EACjB;EACA;EACA;EACI,MAAMC,UAAU,GAAGD,kBAAkB,CAACD,cAAc,CAAC;EACrD,IAAI,CAACE,UAAU,EAAE;IACb,OAAO,EAAE;EACjB;EACI,MAAMC,GAAG,GAAG,EAAE;EACd,MAAMC,UAAU,GAAGN,MAAM,CAACO,SAAS,CAAC,KAAK,IAAI;EAC7C,KAAK,MAAMC,SAAS,IAAIC,MAAM,CAACC,MAAM,CAACN,UAAU,CAAC,EAAE;IAC/CC,GAAG,CAACG,SAAS,CAACG,IAAI,CAAC,GAAGC,eAAe,CAACZ,MAAM,EAAEG,kBAAkB,EAAER,gBAAgB,CAACO,cAAc,CAAC,EAAEM,SAAS,EAAEF,UAAU,CAAC;EAClI;EACI,OAAOD,GAAG;AACd;AACO,SAASQ,+BAA+BA,CAACb,MAAM,EAAEC,MAAM,EAAE;EAC5D,OAAOF,gCAAgC,CAACC,MAAM,EAAEC,MAAM,EAAE,WAAW,CAAC;AACxE;AACO,SAASa,6BAA6BA,CAACd,MAAM,EAAEC,MAAM,EAAE;EAC1D,OAAOF,gCAAgC,CAACC,MAAM,EAAEC,MAAM,EAAE,SAAS,CAAC;AACtE;AACO,SAASc,mCAAmCA,CAACf,MAAM,EAAEC,MAAM,EAAE;EAChE,OAAOF,gCAAgC,CAACC,MAAM,EAAEC,MAAM,EAAE,eAAe,CAAC;AAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}