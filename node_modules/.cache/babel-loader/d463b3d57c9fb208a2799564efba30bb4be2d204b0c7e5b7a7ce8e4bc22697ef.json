{"ast":null,"code":"import { __assign, __awaiter, __generator, __spreadArray } from \"tslib\";\nimport { Alias, Group, Identify, Page, Track } from '@segment/facade';\nimport { isOffline, isOnline } from '../../core/connection';\nimport { Context, ContextCancelation } from '../../core/context';\nimport { isServer } from '../../core/environment';\nimport { attempt } from '@segment/analytics-core';\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled';\nimport { mergedOptions } from '../../lib/merged-options';\nimport { pWhile } from '../../lib/p-while';\nimport { PriorityQueue } from '../../lib/priority-queue';\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted';\nimport { applyDestinationMiddleware } from '../middleware';\nimport { buildIntegration, loadIntegration, resolveIntegrationNameFromSource, resolveVersion, unloadIntegration } from './loader';\nimport { isPlainObject } from '@segment/analytics-core';\nimport { isDisabledIntegration as shouldSkipIntegration, isInstallableIntegration } from './utils';\nimport { recordIntegrationMetric } from '../../core/stats/metric-helpers';\nimport { createDeferred } from '@segment/analytics-generic-utils';\nfunction flushQueue(xt, queue) {\n  return __awaiter(this, void 0, void 0, function () {\n    var failedQueue;\n    var _this = this;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          failedQueue = [];\n          if (isOffline()) {\n            return [2 /*return*/, queue];\n          }\n          return [4 /*yield*/, pWhile(function () {\n            return queue.length > 0 && isOnline();\n          }, function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              var ctx, result, success;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    ctx = queue.pop();\n                    if (!ctx) {\n                      return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, attempt(ctx, xt)];\n                  case 1:\n                    result = _a.sent();\n                    success = result instanceof Context;\n                    if (!success) {\n                      failedQueue.push(ctx);\n                    }\n                    return [2 /*return*/];\n                }\n              });\n            });\n          })\n          // re-add failed tasks\n          ];\n        case 1:\n          _a.sent();\n          // re-add failed tasks\n          failedQueue.map(function (failed) {\n            return queue.pushWithBackoff(failed);\n          });\n          return [2 /*return*/, queue];\n      }\n    });\n  });\n}\nvar LegacyDestination = /** @class */function () {\n  function LegacyDestination(name, version, writeKey, settings, options, integrationSource) {\n    if (settings === void 0) {\n      settings = {};\n    }\n    var _this = this;\n    this.options = {};\n    this.type = 'destination';\n    this.middleware = [];\n    this.initializePromise = createDeferred();\n    this.flushing = false;\n    this.name = name;\n    this.version = version;\n    this.settings = __assign({}, settings);\n    this.disableAutoISOConversion = options.disableAutoISOConversion || false;\n    this.integrationSource = integrationSource;\n    // AJS-Renderer sets an extraneous `type` setting that clobbers\n    // existing type defaults. We need to remove it if it's present\n    if (this.settings['type'] && this.settings['type'] === 'browser') {\n      delete this.settings['type'];\n    }\n    this.initializePromise.promise.then(function (isInitialized) {\n      return _this._initialized = isInitialized;\n    }, function () {});\n    this.options = options;\n    this.buffer = options.disableClientPersistence ? new PriorityQueue(4, []) : new PersistedPriorityQueue(4, \"\".concat(writeKey, \":dest-\").concat(name));\n    this.scheduleFlush();\n  }\n  LegacyDestination.prototype.isLoaded = function () {\n    return !!this._ready;\n  };\n  LegacyDestination.prototype.ready = function () {\n    var _this = this;\n    return this.initializePromise.promise.then(function () {\n      var _a;\n      return (_a = _this.onReady) !== null && _a !== void 0 ? _a : Promise.resolve();\n    });\n  };\n  LegacyDestination.prototype.load = function (ctx, analyticsInstance) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var integrationSource, _b;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (this._ready || this.onReady !== undefined) {\n              return [2 /*return*/];\n            }\n            if (!((_a = this.integrationSource) !== null && _a !== void 0)) return [3 /*break*/, 1];\n            _b = _a;\n            return [3 /*break*/, 3];\n          case 1:\n            return [4 /*yield*/, loadIntegration(ctx, this.name, this.version, this.options.obfuscate)];\n          case 2:\n            _b = _c.sent();\n            _c.label = 3;\n          case 3:\n            integrationSource = _b;\n            this.integration = buildIntegration(integrationSource, this.settings, analyticsInstance);\n            this.onReady = new Promise(function (resolve) {\n              var onReadyFn = function () {\n                _this._ready = true;\n                resolve(true);\n              };\n              _this.integration.once('ready', onReadyFn);\n            });\n            this.integration.on('initialize', function () {\n              _this.initializePromise.resolve(true);\n            });\n            try {\n              recordIntegrationMetric(ctx, {\n                integrationName: this.name,\n                methodName: 'initialize',\n                type: 'classic'\n              });\n              this.integration.initialize();\n            } catch (error) {\n              recordIntegrationMetric(ctx, {\n                integrationName: this.name,\n                methodName: 'initialize',\n                type: 'classic',\n                didError: true\n              });\n              this.initializePromise.resolve(false);\n              throw error;\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  LegacyDestination.prototype.unload = function (_ctx, _analyticsInstance) {\n    return unloadIntegration(this.name, this.version, this.options.obfuscate);\n  };\n  LegacyDestination.prototype.addMiddleware = function () {\n    var _a;\n    var fn = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fn[_i] = arguments[_i];\n    }\n    this.middleware = (_a = this.middleware).concat.apply(_a, fn);\n  };\n  LegacyDestination.prototype.shouldBuffer = function (ctx) {\n    return (\n      // page events can't be buffered because of destinations that automatically add page views\n      ctx.event.type !== 'page' && (isOffline() || this._ready !== true || this._initialized !== true)\n    );\n  };\n  LegacyDestination.prototype.send = function (ctx, clz, eventType) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var plan, ev, planEvent, afterMiddleware, event, err_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (this.shouldBuffer(ctx)) {\n              this.buffer.push(ctx);\n              this.scheduleFlush();\n              return [2 /*return*/, ctx];\n            }\n            plan = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.plan) === null || _b === void 0 ? void 0 : _b.track;\n            ev = ctx.event.event;\n            if (plan && ev && this.name !== 'Segment.io') {\n              planEvent = plan[ev];\n              if (!isPlanEventEnabled(plan, planEvent)) {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), {\n                  All: false,\n                  'Segment.io': true\n                }));\n                ctx.cancel(new ContextCancelation({\n                  retry: false,\n                  reason: \"Event \".concat(ev, \" disabled for integration \").concat(this.name, \" in tracking plan\"),\n                  type: 'Dropped by plan'\n                }));\n              } else {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations));\n              }\n              if ((planEvent === null || planEvent === void 0 ? void 0 : planEvent.enabled) && (planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations[this.name]) === false) {\n                ctx.cancel(new ContextCancelation({\n                  retry: false,\n                  reason: \"Event \".concat(ev, \" disabled for integration \").concat(this.name, \" in tracking plan\"),\n                  type: 'Dropped by plan'\n                }));\n              }\n            }\n            return [4 /*yield*/, applyDestinationMiddleware(this.name, ctx.event, this.middleware)];\n          case 1:\n            afterMiddleware = _c.sent();\n            if (afterMiddleware === null) {\n              return [2 /*return*/, ctx];\n            }\n            event = new clz(afterMiddleware, {\n              traverse: !this.disableAutoISOConversion\n            });\n            recordIntegrationMetric(ctx, {\n              integrationName: this.name,\n              methodName: eventType,\n              type: 'classic'\n            });\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 5,, 6]);\n            if (!this.integration) return [3 /*break*/, 4];\n            return [4 /*yield*/, this.integration.invoke.call(this.integration, eventType, event)];\n          case 3:\n            _c.sent();\n            _c.label = 4;\n          case 4:\n            return [3 /*break*/, 6];\n          case 5:\n            err_1 = _c.sent();\n            recordIntegrationMetric(ctx, {\n              integrationName: this.name,\n              methodName: eventType,\n              type: 'classic',\n              didError: true\n            });\n            throw err_1;\n          case 6:\n            return [2 /*return*/, ctx];\n        }\n      });\n    });\n  };\n  LegacyDestination.prototype.track = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.send(ctx, Track, 'track')];\n      });\n    });\n  };\n  LegacyDestination.prototype.page = function (ctx) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (((_a = this.integration) === null || _a === void 0 ? void 0 : _a._assumesPageview) && !this._initialized) {\n              this.integration.initialize();\n            }\n            return [4 /*yield*/, this.initializePromise.promise];\n          case 1:\n            _b.sent();\n            return [2 /*return*/, this.send(ctx, Page, 'page')];\n        }\n      });\n    });\n  };\n  LegacyDestination.prototype.identify = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.send(ctx, Identify, 'identify')];\n      });\n    });\n  };\n  LegacyDestination.prototype.alias = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.send(ctx, Alias, 'alias')];\n      });\n    });\n  };\n  LegacyDestination.prototype.group = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.send(ctx, Group, 'group')];\n      });\n    });\n  };\n  LegacyDestination.prototype.scheduleFlush = function () {\n    var _this = this;\n    if (this.flushing) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (isOffline() || this._ready !== true || this._initialized !== true) {\n                this.scheduleFlush();\n                return [2 /*return*/];\n              }\n              this.flushing = true;\n              _a = this;\n              return [4 /*yield*/, flushQueue(this, this.buffer)];\n            case 1:\n              _a.buffer = _b.sent();\n              this.flushing = false;\n              if (this.buffer.todo > 0) {\n                this.scheduleFlush();\n              }\n              return [2 /*return*/];\n          }\n        });\n      });\n    }, Math.random() * 5000);\n  };\n  return LegacyDestination;\n}();\nexport { LegacyDestination };\nexport function ajsDestinations(writeKey, settings, globalIntegrations, options, routingMiddleware, legacyIntegrationSources) {\n  var _a, _b;\n  if (globalIntegrations === void 0) {\n    globalIntegrations = {};\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  if (isServer()) {\n    return [];\n  }\n  if (settings.plan) {\n    options = options !== null && options !== void 0 ? options : {};\n    options.plan = settings.plan;\n  }\n  var routingRules = (_b = (_a = settings.middlewareSettings) === null || _a === void 0 ? void 0 : _a.routingRules) !== null && _b !== void 0 ? _b : [];\n  var remoteIntegrationsConfig = settings.integrations;\n  var localIntegrationsConfig = options.integrations;\n  // merged remote CDN settings with user provided options\n  var integrationOptions = mergedOptions(settings, options !== null && options !== void 0 ? options : {});\n  var adhocIntegrationSources = legacyIntegrationSources === null || legacyIntegrationSources === void 0 ? void 0 : legacyIntegrationSources.reduce(function (acc, integrationSource) {\n    var _a;\n    return __assign(__assign({}, acc), (_a = {}, _a[resolveIntegrationNameFromSource(integrationSource)] = integrationSource, _a));\n  }, {});\n  var installableIntegrations = new Set(__spreadArray(__spreadArray([], Object.keys(remoteIntegrationsConfig).filter(function (name) {\n    return isInstallableIntegration(name, remoteIntegrationsConfig[name]);\n  }), true), Object.keys(adhocIntegrationSources || {}).filter(function (name) {\n    return isPlainObject(remoteIntegrationsConfig[name]) || isPlainObject(localIntegrationsConfig === null || localIntegrationsConfig === void 0 ? void 0 : localIntegrationsConfig[name]);\n  }), true));\n  return Array.from(installableIntegrations).filter(function (name) {\n    return !shouldSkipIntegration(name, globalIntegrations);\n  }).map(function (name) {\n    var integrationSettings = remoteIntegrationsConfig[name];\n    var version = resolveVersion(integrationSettings);\n    var destination = new LegacyDestination(name, version, writeKey, integrationOptions[name], options, adhocIntegrationSources === null || adhocIntegrationSources === void 0 ? void 0 : adhocIntegrationSources[name]);\n    var routing = routingRules.filter(function (rule) {\n      return rule.destinationName === name;\n    });\n    if (routing.length > 0 && routingMiddleware) {\n      destination.addMiddleware(routingMiddleware);\n    }\n    return destination;\n  });\n}","map":{"version":3,"names":["Alias","Group","Identify","Page","Track","isOffline","isOnline","Context","ContextCancelation","isServer","attempt","isPlanEventEnabled","mergedOptions","pWhile","PriorityQueue","PersistedPriorityQueue","applyDestinationMiddleware","buildIntegration","loadIntegration","resolveIntegrationNameFromSource","resolveVersion","unloadIntegration","isPlainObject","isDisabledIntegration","shouldSkipIntegration","isInstallableIntegration","recordIntegrationMetric","createDeferred","flushQueue","xt","queue","failedQueue","length","__awaiter","_this","ctx","pop","result","_a","sent","success","push","map","failed","pushWithBackoff","LegacyDestination","name","version","writeKey","settings","options","integrationSource","type","middleware","initializePromise","flushing","__assign","disableAutoISOConversion","promise","then","isInitialized","_initialized","buffer","disableClientPersistence","concat","scheduleFlush","prototype","isLoaded","_ready","ready","onReady","Promise","resolve","load","analyticsInstance","undefined","obfuscate","_b","_c","integration","onReadyFn","once","on","integrationName","methodName","initialize","error","didError","unload","_ctx","_analyticsInstance","addMiddleware","fn","_i","arguments","apply","shouldBuffer","event","send","clz","eventType","plan","track","ev","planEvent","updateEvent","integrations","All","cancel","retry","reason","enabled","afterMiddleware","traverse","invoke","call","err_1","page","_assumesPageview","identify","alias","group","setTimeout","todo","Math","random","ajsDestinations","globalIntegrations","routingMiddleware","legacyIntegrationSources","routingRules","middlewareSettings","remoteIntegrationsConfig","localIntegrationsConfig","integrationOptions","adhocIntegrationSources","reduce","acc","installableIntegrations","Set","__spreadArray","Object","keys","filter","Array","from","integrationSettings","destination","routing","rule","destinationName"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/plugins/ajs-destination/index.ts"],"sourcesContent":["import { Integrations, JSONObject } from '../../core/events'\nimport { Alias, Facade, Group, Identify, Page, Track } from '@segment/facade'\nimport { Analytics, InitOptions } from '../../core/analytics'\nimport { LegacySettings } from '../../browser'\nimport { isOffline, isOnline } from '../../core/connection'\nimport { Context, ContextCancelation } from '../../core/context'\nimport { isServer } from '../../core/environment'\nimport { InternalPluginWithAddMiddleware, Plugin } from '../../core/plugin'\nimport { attempt } from '@segment/analytics-core'\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled'\nimport { mergedOptions } from '../../lib/merged-options'\nimport { pWhile } from '../../lib/p-while'\nimport { PriorityQueue } from '../../lib/priority-queue'\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted'\nimport {\n  applyDestinationMiddleware,\n  DestinationMiddlewareFunction,\n} from '../middleware'\nimport {\n  buildIntegration,\n  loadIntegration,\n  resolveIntegrationNameFromSource,\n  resolveVersion,\n  unloadIntegration,\n} from './loader'\nimport { LegacyIntegration, ClassicIntegrationSource } from './types'\nimport { isPlainObject } from '@segment/analytics-core'\nimport {\n  isDisabledIntegration as shouldSkipIntegration,\n  isInstallableIntegration,\n} from './utils'\nimport { recordIntegrationMetric } from '../../core/stats/metric-helpers'\nimport { createDeferred } from '@segment/analytics-generic-utils'\n\nexport type ClassType<T> = new (...args: unknown[]) => T\n\nasync function flushQueue(\n  xt: Plugin,\n  queue: PriorityQueue<Context>\n): Promise<PriorityQueue<Context>> {\n  const failedQueue: Context[] = []\n\n  if (isOffline()) {\n    return queue\n  }\n\n  await pWhile(\n    () => queue.length > 0 && isOnline(),\n    async () => {\n      const ctx = queue.pop()\n      if (!ctx) {\n        return\n      }\n\n      const result = await attempt(ctx, xt)\n      const success = result instanceof Context\n      if (!success) {\n        failedQueue.push(ctx)\n      }\n    }\n  )\n\n  // re-add failed tasks\n  failedQueue.map((failed) => queue.pushWithBackoff(failed))\n  return queue\n}\n\nexport class LegacyDestination implements InternalPluginWithAddMiddleware {\n  name: string\n  version: string\n  settings: JSONObject\n  options: InitOptions = {}\n  readonly type = 'destination'\n  middleware: DestinationMiddlewareFunction[] = []\n\n  private _ready: boolean | undefined\n  private _initialized: boolean | undefined\n  private onReady: Promise<unknown> | undefined\n  private initializePromise = createDeferred<boolean>()\n  private disableAutoISOConversion: boolean\n\n  integrationSource?: ClassicIntegrationSource\n  integration: LegacyIntegration | undefined\n\n  buffer: PriorityQueue<Context>\n  flushing = false\n\n  constructor(\n    name: string,\n    version: string,\n    writeKey: string,\n    settings: JSONObject = {},\n    options: InitOptions,\n    integrationSource?: ClassicIntegrationSource\n  ) {\n    this.name = name\n    this.version = version\n    this.settings = { ...settings }\n    this.disableAutoISOConversion = options.disableAutoISOConversion || false\n    this.integrationSource = integrationSource\n\n    // AJS-Renderer sets an extraneous `type` setting that clobbers\n    // existing type defaults. We need to remove it if it's present\n    if (this.settings['type'] && this.settings['type'] === 'browser') {\n      delete this.settings['type']\n    }\n\n    this.initializePromise.promise.then(\n      (isInitialized) => (this._initialized = isInitialized),\n      () => {}\n    )\n\n    this.options = options\n    this.buffer = options.disableClientPersistence\n      ? new PriorityQueue(4, [])\n      : new PersistedPriorityQueue(4, `${writeKey}:dest-${name}`)\n\n    this.scheduleFlush()\n  }\n\n  isLoaded(): boolean {\n    return !!this._ready\n  }\n\n  ready(): Promise<unknown> {\n    return this.initializePromise.promise.then(\n      () => this.onReady ?? Promise.resolve()\n    )\n  }\n\n  async load(ctx: Context, analyticsInstance: Analytics): Promise<void> {\n    if (this._ready || this.onReady !== undefined) {\n      return\n    }\n\n    const integrationSource =\n      this.integrationSource ??\n      (await loadIntegration(\n        ctx,\n        this.name,\n        this.version,\n        this.options.obfuscate\n      ))\n\n    this.integration = buildIntegration(\n      integrationSource,\n      this.settings,\n      analyticsInstance\n    )\n\n    this.onReady = new Promise((resolve) => {\n      const onReadyFn = (): void => {\n        this._ready = true\n        resolve(true)\n      }\n\n      this.integration!.once('ready', onReadyFn)\n    })\n\n    this.integration!.on('initialize', () => {\n      this.initializePromise.resolve(true)\n    })\n\n    try {\n      recordIntegrationMetric(ctx, {\n        integrationName: this.name,\n        methodName: 'initialize',\n        type: 'classic',\n      })\n      this.integration.initialize()\n    } catch (error) {\n      recordIntegrationMetric(ctx, {\n        integrationName: this.name,\n        methodName: 'initialize',\n        type: 'classic',\n        didError: true,\n      })\n      this.initializePromise.resolve(false)\n      throw error\n    }\n  }\n\n  unload(_ctx: Context, _analyticsInstance: Analytics): Promise<void> {\n    return unloadIntegration(this.name, this.version, this.options.obfuscate)\n  }\n\n  addMiddleware(...fn: DestinationMiddlewareFunction[]): void {\n    this.middleware = this.middleware.concat(...fn)\n  }\n\n  shouldBuffer(ctx: Context): boolean {\n    return (\n      // page events can't be buffered because of destinations that automatically add page views\n      ctx.event.type !== 'page' &&\n      (isOffline() || this._ready !== true || this._initialized !== true)\n    )\n  }\n\n  private async send<T extends Facade>(\n    ctx: Context,\n    clz: ClassType<T>,\n    eventType: 'track' | 'identify' | 'page' | 'alias' | 'group'\n  ): Promise<Context> {\n    if (this.shouldBuffer(ctx)) {\n      this.buffer.push(ctx)\n      this.scheduleFlush()\n      return ctx\n    }\n\n    const plan = this.options?.plan?.track\n    const ev = ctx.event.event\n\n    if (plan && ev && this.name !== 'Segment.io') {\n      // events are always sent to segment (legacy behavior)\n      const planEvent = plan[ev]\n      if (!isPlanEventEnabled(plan, planEvent)) {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          All: false,\n          'Segment.io': true,\n        })\n        ctx.cancel(\n          new ContextCancelation({\n            retry: false,\n            reason: `Event ${ev} disabled for integration ${this.name} in tracking plan`,\n            type: 'Dropped by plan',\n          })\n        )\n      } else {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          ...planEvent?.integrations,\n        })\n      }\n\n      if (planEvent?.enabled && planEvent?.integrations![this.name] === false) {\n        ctx.cancel(\n          new ContextCancelation({\n            retry: false,\n            reason: `Event ${ev} disabled for integration ${this.name} in tracking plan`,\n            type: 'Dropped by plan',\n          })\n        )\n      }\n    }\n\n    const afterMiddleware = await applyDestinationMiddleware(\n      this.name,\n      ctx.event,\n      this.middleware\n    )\n\n    if (afterMiddleware === null) {\n      return ctx\n    }\n\n    const event = new clz(afterMiddleware, {\n      traverse: !this.disableAutoISOConversion,\n    })\n\n    recordIntegrationMetric(ctx, {\n      integrationName: this.name,\n      methodName: eventType,\n      type: 'classic',\n    })\n\n    try {\n      if (this.integration) {\n        await this.integration!.invoke.call(this.integration, eventType, event)\n      }\n    } catch (err) {\n      recordIntegrationMetric(ctx, {\n        integrationName: this.name,\n        methodName: eventType,\n        type: 'classic',\n        didError: true,\n      })\n      throw err\n    }\n\n    return ctx\n  }\n\n  async track(ctx: Context): Promise<Context> {\n    return this.send(ctx, Track as ClassType<Track>, 'track')\n  }\n\n  async page(ctx: Context): Promise<Context> {\n    if (this.integration?._assumesPageview && !this._initialized) {\n      this.integration.initialize()\n    }\n\n    await this.initializePromise.promise\n    return this.send(ctx, Page as ClassType<Page>, 'page')\n  }\n\n  async identify(ctx: Context): Promise<Context> {\n    return this.send(ctx, Identify as ClassType<Identify>, 'identify')\n  }\n\n  async alias(ctx: Context): Promise<Context> {\n    return this.send(ctx, Alias as ClassType<Alias>, 'alias')\n  }\n\n  async group(ctx: Context): Promise<Context> {\n    return this.send(ctx, Group as ClassType<Group>, 'group')\n  }\n\n  private scheduleFlush(): void {\n    if (this.flushing) {\n      return\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(async () => {\n      if (isOffline() || this._ready !== true || this._initialized !== true) {\n        this.scheduleFlush()\n        return\n      }\n\n      this.flushing = true\n      this.buffer = await flushQueue(this, this.buffer)\n      this.flushing = false\n\n      if (this.buffer.todo > 0) {\n        this.scheduleFlush()\n      }\n    }, Math.random() * 5000)\n  }\n}\n\nexport function ajsDestinations(\n  writeKey: string,\n  settings: LegacySettings,\n  globalIntegrations: Integrations = {},\n  options: InitOptions = {},\n  routingMiddleware?: DestinationMiddlewareFunction,\n  legacyIntegrationSources?: ClassicIntegrationSource[]\n): LegacyDestination[] {\n  if (isServer()) {\n    return []\n  }\n\n  if (settings.plan) {\n    options = options ?? {}\n    options.plan = settings.plan\n  }\n\n  const routingRules = settings.middlewareSettings?.routingRules ?? []\n  const remoteIntegrationsConfig = settings.integrations\n  const localIntegrationsConfig = options.integrations\n  // merged remote CDN settings with user provided options\n  const integrationOptions = mergedOptions(settings, options ?? {}) as Record<\n    string,\n    JSONObject\n  >\n\n  const adhocIntegrationSources = legacyIntegrationSources?.reduce(\n    (acc, integrationSource) => ({\n      ...acc,\n      [resolveIntegrationNameFromSource(integrationSource)]: integrationSource,\n    }),\n    {} as Record<string, ClassicIntegrationSource>\n  )\n\n  const installableIntegrations = new Set([\n    // Remotely configured installable integrations\n    ...Object.keys(remoteIntegrationsConfig).filter((name) =>\n      isInstallableIntegration(name, remoteIntegrationsConfig[name])\n    ),\n\n    // Directly provided integration sources are only installable if settings for them are available\n    ...Object.keys(adhocIntegrationSources || {}).filter(\n      (name) =>\n        isPlainObject(remoteIntegrationsConfig[name]) ||\n        isPlainObject(localIntegrationsConfig?.[name])\n    ),\n  ])\n\n  return Array.from(installableIntegrations)\n    .filter((name) => !shouldSkipIntegration(name, globalIntegrations))\n    .map((name) => {\n      const integrationSettings = remoteIntegrationsConfig[name]\n      const version = resolveVersion(integrationSettings)\n      const destination = new LegacyDestination(\n        name,\n        version,\n        writeKey,\n        integrationOptions[name],\n        options,\n        adhocIntegrationSources?.[name]\n      )\n\n      const routing = routingRules.filter(\n        (rule) => rule.destinationName === name\n      )\n      if (routing.length > 0 && routingMiddleware) {\n        destination.addMiddleware(routingMiddleware)\n      }\n\n      return destination\n    })\n}\n"],"mappings":";AACA,SAASA,KAAK,EAAUC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAG7E,SAASC,SAAS,EAAEC,QAAQ,QAAQ,uBAAuB;AAC3D,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,oBAAoB;AAChE,SAASC,QAAQ,QAAQ,wBAAwB;AAEjD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,sBAAsB,QAAQ,oCAAoC;AAC3E,SACEC,0BAA0B,QAErB,eAAe;AACtB,SACEC,gBAAgB,EAChBC,eAAe,EACfC,gCAAgC,EAChCC,cAAc,EACdC,iBAAiB,QACZ,UAAU;AAEjB,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SACEC,qBAAqB,IAAIC,qBAAqB,EAC9CC,wBAAwB,QACnB,SAAS;AAChB,SAASC,uBAAuB,QAAQ,iCAAiC;AACzE,SAASC,cAAc,QAAQ,kCAAkC;AAIjE,SAAeC,UAAUA,CACvBC,EAAU,EACVC,KAA6B;;;;;;;UAEvBC,WAAW,GAAc,EAAE;UAEjC,IAAI1B,SAAS,EAAE,EAAE;YACf,sBAAOyB,KAAK;;UAGd,qBAAMjB,MAAM,CACV;YAAM,OAAAiB,KAAK,CAACE,MAAM,GAAG,CAAC,IAAI1B,QAAQ,EAAE;UAA9B,CAA8B,EACpC;YAAA,OAAA2B,SAAA,CAAAC,KAAA;;;;;oBACQC,GAAG,GAAGL,KAAK,CAACM,GAAG,EAAE;oBACvB,IAAI,CAACD,GAAG,EAAE;sBACR;;oBAGa,qBAAMzB,OAAO,CAACyB,GAAG,EAAEN,EAAE,CAAC;;oBAA/BQ,MAAM,GAAGC,EAAA,CAAAC,IAAA,EAAsB;oBAC/BC,OAAO,GAAGH,MAAM,YAAY9B,OAAO;oBACzC,IAAI,CAACiC,OAAO,EAAE;sBACZT,WAAW,CAACU,IAAI,CAACN,GAAG,CAAC;;;;;;WAExB;UAGH;UAAA,C;;UAhBAG,EAAA,CAAAC,IAAA,EAcC;UAED;UACAR,WAAW,CAACW,GAAG,CAAC,UAACC,MAAM;YAAK,OAAAb,KAAK,CAACc,eAAe,CAACD,MAAM,CAAC;UAA7B,CAA6B,CAAC;UAC1D,sBAAOb,KAAK;;;;;AAGd,IAAAe,iBAAA;EAoBE,SAAAA,kBACEC,IAAY,EACZC,OAAe,EACfC,QAAgB,EAChBC,QAAyB,EACzBC,OAAoB,EACpBC,iBAA4C;IAF5C,IAAAF,QAAA;MAAAA,QAAA,KAAyB;IAAA;IAJ3B,IAAAf,KAAA;IAhBA,KAAAgB,OAAO,GAAgB,EAAE;IAChB,KAAAE,IAAI,GAAG,aAAa;IAC7B,KAAAC,UAAU,GAAoC,EAAE;IAKxC,KAAAC,iBAAiB,GAAG3B,cAAc,EAAW;IAOrD,KAAA4B,QAAQ,GAAG,KAAK;IAUd,IAAI,CAACT,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,QAAQ,GAAAO,QAAA,KAAQP,QAAQ,CAAE;IAC/B,IAAI,CAACQ,wBAAwB,GAAGP,OAAO,CAACO,wBAAwB,IAAI,KAAK;IACzE,IAAI,CAACN,iBAAiB,GAAGA,iBAAiB;IAE1C;IACA;IACA,IAAI,IAAI,CAACF,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAACA,QAAQ,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;MAChE,OAAO,IAAI,CAACA,QAAQ,CAAC,MAAM,CAAC;;IAG9B,IAAI,CAACK,iBAAiB,CAACI,OAAO,CAACC,IAAI,CACjC,UAACC,aAAa;MAAK,OAAC1B,KAAI,CAAC2B,YAAY,GAAGD,aAAa;IAAlC,CAAmC,EACtD,aAAO,CAAC,CACT;IAED,IAAI,CAACV,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACY,MAAM,GAAGZ,OAAO,CAACa,wBAAwB,GAC1C,IAAIjD,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC,GACxB,IAAIC,sBAAsB,CAAC,CAAC,EAAE,GAAAiD,MAAA,CAAGhB,QAAQ,YAAAgB,MAAA,CAASlB,IAAI,CAAE,CAAC;IAE7D,IAAI,CAACmB,aAAa,EAAE;EACtB;EAEApB,iBAAA,CAAAqB,SAAA,CAAAC,QAAQ,GAAR;IACE,OAAO,CAAC,CAAC,IAAI,CAACC,MAAM;EACtB,CAAC;EAEDvB,iBAAA,CAAAqB,SAAA,CAAAG,KAAK,GAAL;IAAA,IAAAnC,KAAA;IACE,OAAO,IAAI,CAACoB,iBAAiB,CAACI,OAAO,CAACC,IAAI,CACxC;MAAA,IAAArB,EAAA;MAAM,QAAAA,EAAA,GAAAJ,KAAI,CAACoC,OAAO,cAAAhC,EAAA,cAAAA,EAAA,GAAIiC,OAAO,CAACC,OAAO,EAAE;IAAA,EACxC;EACH,CAAC;EAEK3B,iBAAA,CAAAqB,SAAA,CAAAO,IAAI,GAAV,UAAWtC,GAAY,EAAEuC,iBAA4B;;;;;;;;YACnD,IAAI,IAAI,CAACN,MAAM,IAAI,IAAI,CAACE,OAAO,KAAKK,SAAS,EAAE;cAC7C;;wBAIA,IAAI,CAACxB,iBAAiB,cAAAb,EAAA;;;;YACrB,qBAAMpB,eAAe,CACpBiB,GAAG,EACH,IAAI,CAACW,IAAI,EACT,IAAI,CAACC,OAAO,EACZ,IAAI,CAACG,OAAO,CAAC0B,SAAS,CACvB;;YALDC,EAAA,GAACC,EAAA,CAAAvC,IAAA,EAKC;;;YAPEY,iBAAiB,GAAA0B,EAOnB;YAEJ,IAAI,CAACE,WAAW,GAAG9D,gBAAgB,CACjCkC,iBAAiB,EACjB,IAAI,CAACF,QAAQ,EACbyB,iBAAiB,CAClB;YAED,IAAI,CAACJ,OAAO,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO;cACjC,IAAMQ,SAAS,GAAG,SAAAA,CAAA;gBAChB9C,KAAI,CAACkC,MAAM,GAAG,IAAI;gBAClBI,OAAO,CAAC,IAAI,CAAC;cACf,CAAC;cAEDtC,KAAI,CAAC6C,WAAY,CAACE,IAAI,CAAC,OAAO,EAAED,SAAS,CAAC;YAC5C,CAAC,CAAC;YAEF,IAAI,CAACD,WAAY,CAACG,EAAE,CAAC,YAAY,EAAE;cACjChD,KAAI,CAACoB,iBAAiB,CAACkB,OAAO,CAAC,IAAI,CAAC;YACtC,CAAC,CAAC;YAEF,IAAI;cACF9C,uBAAuB,CAACS,GAAG,EAAE;gBAC3BgD,eAAe,EAAE,IAAI,CAACrC,IAAI;gBAC1BsC,UAAU,EAAE,YAAY;gBACxBhC,IAAI,EAAE;eACP,CAAC;cACF,IAAI,CAAC2B,WAAW,CAACM,UAAU,EAAE;aAC9B,CAAC,OAAOC,KAAK,EAAE;cACd5D,uBAAuB,CAACS,GAAG,EAAE;gBAC3BgD,eAAe,EAAE,IAAI,CAACrC,IAAI;gBAC1BsC,UAAU,EAAE,YAAY;gBACxBhC,IAAI,EAAE,SAAS;gBACfmC,QAAQ,EAAE;eACX,CAAC;cACF,IAAI,CAACjC,iBAAiB,CAACkB,OAAO,CAAC,KAAK,CAAC;cACrC,MAAMc,KAAK;;;;;;GAEd;EAEDzC,iBAAA,CAAAqB,SAAA,CAAAsB,MAAM,GAAN,UAAOC,IAAa,EAAEC,kBAA6B;IACjD,OAAOrE,iBAAiB,CAAC,IAAI,CAACyB,IAAI,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACG,OAAO,CAAC0B,SAAS,CAAC;EAC3E,CAAC;EAED/B,iBAAA,CAAAqB,SAAA,CAAAyB,aAAa,GAAb;;IAAc,IAAAC,EAAA;SAAA,IAAAC,EAAA,IAAsC,EAAtCA,EAAA,GAAAC,SAAA,CAAA9D,MAAsC,EAAtC6D,EAAA,EAAsC;MAAtCD,EAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IACZ,IAAI,CAACxC,UAAU,GAAG,CAAAf,EAAA,OAAI,CAACe,UAAU,EAACW,MAAM,CAAA+B,KAAA,CAAAzD,EAAA,EAAIsD,EAAE,CAAC;EACjD,CAAC;EAED/C,iBAAA,CAAAqB,SAAA,CAAA8B,YAAY,GAAZ,UAAa7D,GAAY;IACvB;MACE;MACAA,GAAG,CAAC8D,KAAK,CAAC7C,IAAI,KAAK,MAAM,KACxB/C,SAAS,EAAE,IAAI,IAAI,CAAC+D,MAAM,KAAK,IAAI,IAAI,IAAI,CAACP,YAAY,KAAK,IAAI;IAAC;EAEvE,CAAC;EAEahB,iBAAA,CAAAqB,SAAA,CAAAgC,IAAI,GAAlB,UACE/D,GAAY,EACZgE,GAAiB,EACjBC,SAA4D;;;;;;;YAE5D,IAAI,IAAI,CAACJ,YAAY,CAAC7D,GAAG,CAAC,EAAE;cAC1B,IAAI,CAAC2B,MAAM,CAACrB,IAAI,CAACN,GAAG,CAAC;cACrB,IAAI,CAAC8B,aAAa,EAAE;cACpB,sBAAO9B,GAAG;;YAGNkE,IAAI,GAAG,CAAAxB,EAAA,IAAAvC,EAAA,OAAI,CAACY,OAAO,cAAAZ,EAAA,uBAAAA,EAAA,CAAE+D,IAAI,cAAAxB,EAAA,uBAAAA,EAAA,CAAEyB,KAAK;YAChCC,EAAE,GAAGpE,GAAG,CAAC8D,KAAK,CAACA,KAAK;YAE1B,IAAII,IAAI,IAAIE,EAAE,IAAI,IAAI,CAACzD,IAAI,KAAK,YAAY,EAAE;cAEtC0D,SAAS,GAAGH,IAAI,CAACE,EAAE,CAAC;cAC1B,IAAI,CAAC5F,kBAAkB,CAAC0F,IAAI,EAAEG,SAAS,CAAC,EAAE;gBACxCrE,GAAG,CAACsE,WAAW,CAAC,cAAc,EAAAjD,QAAA,CAAAA,QAAA,KACzBrB,GAAG,CAAC8D,KAAK,CAACS,YAAY;kBACzBC,GAAG,EAAE,KAAK;kBACV,YAAY,EAAE;gBAAI,GAClB;gBACFxE,GAAG,CAACyE,MAAM,CACR,IAAIpG,kBAAkB,CAAC;kBACrBqG,KAAK,EAAE,KAAK;kBACZC,MAAM,EAAE,SAAA9C,MAAA,CAASuC,EAAE,gCAAAvC,MAAA,CAA6B,IAAI,CAAClB,IAAI,sBAAmB;kBAC5EM,IAAI,EAAE;iBACP,CAAC,CACH;eACF,MAAM;gBACLjB,GAAG,CAACsE,WAAW,CAAC,cAAc,EAAAjD,QAAA,CAAAA,QAAA,KACzBrB,GAAG,CAAC8D,KAAK,CAACS,YAAY,GACtBF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,YAAY,EAC1B;;cAGJ,IAAI,CAAAF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEO,OAAO,KAAI,CAAAP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,YAAY,CAAE,IAAI,CAAC5D,IAAI,CAAC,MAAK,KAAK,EAAE;gBACvEX,GAAG,CAACyE,MAAM,CACR,IAAIpG,kBAAkB,CAAC;kBACrBqG,KAAK,EAAE,KAAK;kBACZC,MAAM,EAAE,SAAA9C,MAAA,CAASuC,EAAE,gCAAAvC,MAAA,CAA6B,IAAI,CAAClB,IAAI,sBAAmB;kBAC5EM,IAAI,EAAE;iBACP,CAAC,CACH;;;YAImB,qBAAMpC,0BAA0B,CACtD,IAAI,CAAC8B,IAAI,EACTX,GAAG,CAAC8D,KAAK,EACT,IAAI,CAAC5C,UAAU,CAChB;;YAJK2D,eAAe,GAAGlC,EAAA,CAAAvC,IAAA,EAIvB;YAED,IAAIyE,eAAe,KAAK,IAAI,EAAE;cAC5B,sBAAO7E,GAAG;;YAGN8D,KAAK,GAAG,IAAIE,GAAG,CAACa,eAAe,EAAE;cACrCC,QAAQ,EAAE,CAAC,IAAI,CAACxD;aACjB,CAAC;YAEF/B,uBAAuB,CAACS,GAAG,EAAE;cAC3BgD,eAAe,EAAE,IAAI,CAACrC,IAAI;cAC1BsC,UAAU,EAAEgB,SAAS;cACrBhD,IAAI,EAAE;aACP,CAAC;;;;iBAGI,IAAI,CAAC2B,WAAW,EAAhB;YACF,qBAAM,IAAI,CAACA,WAAY,CAACmC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACpC,WAAW,EAAEqB,SAAS,EAAEH,KAAK,CAAC;;YAAvEnB,EAAA,CAAAvC,IAAA,EAAuE;;;;;;YAGzEb,uBAAuB,CAACS,GAAG,EAAE;cAC3BgD,eAAe,EAAE,IAAI,CAACrC,IAAI;cAC1BsC,UAAU,EAAEgB,SAAS;cACrBhD,IAAI,EAAE,SAAS;cACfmC,QAAQ,EAAE;aACX,CAAC;YACF,MAAM6B,KAAG;;YAGX,sBAAOjF,GAAG;;;;GACX;EAEKU,iBAAA,CAAAqB,SAAA,CAAAoC,KAAK,GAAX,UAAYnE,GAAY;;;QACtB,sBAAO,IAAI,CAAC+D,IAAI,CAAC/D,GAAG,EAAE/B,KAAyB,EAAE,OAAO,CAAC;;;GAC1D;EAEKyC,iBAAA,CAAAqB,SAAA,CAAAmD,IAAI,GAAV,UAAWlF,GAAY;;;;;;YACrB,IAAI,EAAAG,EAAA,OAAI,CAACyC,WAAW,cAAAzC,EAAA,uBAAAA,EAAA,CAAEgF,gBAAgB,KAAI,CAAC,IAAI,CAACzD,YAAY,EAAE;cAC5D,IAAI,CAACkB,WAAW,CAACM,UAAU,EAAE;;YAG/B,qBAAM,IAAI,CAAC/B,iBAAiB,CAACI,OAAO;;YAApCmB,EAAA,CAAAtC,IAAA,EAAoC;YACpC,sBAAO,IAAI,CAAC2D,IAAI,CAAC/D,GAAG,EAAEhC,IAAuB,EAAE,MAAM,CAAC;;;;GACvD;EAEK0C,iBAAA,CAAAqB,SAAA,CAAAqD,QAAQ,GAAd,UAAepF,GAAY;;;QACzB,sBAAO,IAAI,CAAC+D,IAAI,CAAC/D,GAAG,EAAEjC,QAA+B,EAAE,UAAU,CAAC;;;GACnE;EAEK2C,iBAAA,CAAAqB,SAAA,CAAAsD,KAAK,GAAX,UAAYrF,GAAY;;;QACtB,sBAAO,IAAI,CAAC+D,IAAI,CAAC/D,GAAG,EAAEnC,KAAyB,EAAE,OAAO,CAAC;;;GAC1D;EAEK6C,iBAAA,CAAAqB,SAAA,CAAAuD,KAAK,GAAX,UAAYtF,GAAY;;;QACtB,sBAAO,IAAI,CAAC+D,IAAI,CAAC/D,GAAG,EAAElC,KAAyB,EAAE,OAAO,CAAC;;;GAC1D;EAEO4C,iBAAA,CAAAqB,SAAA,CAAAD,aAAa,GAArB;IAAA,IAAA/B,KAAA;IACE,IAAI,IAAI,CAACqB,QAAQ,EAAE;MACjB;;IAGF;IACAmE,UAAU,CAAC;MAAA,OAAAzF,SAAA,CAAAC,KAAA;;;;;cACT,IAAI7B,SAAS,EAAE,IAAI,IAAI,CAAC+D,MAAM,KAAK,IAAI,IAAI,IAAI,CAACP,YAAY,KAAK,IAAI,EAAE;gBACrE,IAAI,CAACI,aAAa,EAAE;gBACpB;;cAGF,IAAI,CAACV,QAAQ,GAAG,IAAI;cACpBjB,EAAA,OAAI;cAAU,qBAAMV,UAAU,CAAC,IAAI,EAAE,IAAI,CAACkC,MAAM,CAAC;;cAAjDxB,EAAA,CAAKwB,MAAM,GAAGe,EAAA,CAAAtC,IAAA,EAAmC;cACjD,IAAI,CAACgB,QAAQ,GAAG,KAAK;cAErB,IAAI,IAAI,CAACO,MAAM,CAAC6D,IAAI,GAAG,CAAC,EAAE;gBACxB,IAAI,CAAC1D,aAAa,EAAE;;;;;;KAEvB,EAAE2D,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,CAAC;EAC1B,CAAC;EACH,OAAAhF,iBAAC;AAAD,CAAC,CAtQD;;AAwQA,OAAM,SAAUiF,eAAeA,CAC7B9E,QAAgB,EAChBC,QAAwB,EACxB8E,kBAAqC,EACrC7E,OAAyB,EACzB8E,iBAAiD,EACjDC,wBAAqD;;EAHrD,IAAAF,kBAAA;IAAAA,kBAAA,KAAqC;EAAA;EACrC,IAAA7E,OAAA;IAAAA,OAAA,KAAyB;EAAA;EAIzB,IAAIzC,QAAQ,EAAE,EAAE;IACd,OAAO,EAAE;;EAGX,IAAIwC,QAAQ,CAACoD,IAAI,EAAE;IACjBnD,OAAO,GAAGA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;IACvBA,OAAO,CAACmD,IAAI,GAAGpD,QAAQ,CAACoD,IAAI;;EAG9B,IAAM6B,YAAY,GAAG,CAAArD,EAAA,IAAAvC,EAAA,GAAAW,QAAQ,CAACkF,kBAAkB,cAAA7F,EAAA,uBAAAA,EAAA,CAAE4F,YAAY,cAAArD,EAAA,cAAAA,EAAA,GAAI,EAAE;EACpE,IAAMuD,wBAAwB,GAAGnF,QAAQ,CAACyD,YAAY;EACtD,IAAM2B,uBAAuB,GAAGnF,OAAO,CAACwD,YAAY;EACpD;EACA,IAAM4B,kBAAkB,GAAG1H,aAAa,CAACqC,QAAQ,EAAEC,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE,CAG/D;EAED,IAAMqF,uBAAuB,GAAGN,wBAAwB,aAAxBA,wBAAwB,uBAAxBA,wBAAwB,CAAEO,MAAM,CAC9D,UAACC,GAAG,EAAEtF,iBAAiB;;IAAK,OAAAK,QAAA,CAAAA,QAAA,KACvBiF,GAAG,IAAAnG,EAAA,OAAAA,EAAA,CACLnB,gCAAgC,CAACgC,iBAAiB,CAAC,IAAGA,iBAAiB,EAAAb,EAAA;EAF9C,CAG1B,EACF,EAA8C,CAC/C;EAED,IAAMoG,uBAAuB,GAAG,IAAIC,GAAG,CAAAC,aAAA,CAAAA,aAAA,KAElCC,MAAM,CAACC,IAAI,CAACV,wBAAwB,CAAC,CAACW,MAAM,CAAC,UAACjG,IAAI;IACnD,OAAArB,wBAAwB,CAACqB,IAAI,EAAEsF,wBAAwB,CAACtF,IAAI,CAAC,CAAC;EAA9D,CAA8D,CAC/D,SAGE+F,MAAM,CAACC,IAAI,CAACP,uBAAuB,IAAI,EAAE,CAAC,CAACQ,MAAM,CAClD,UAACjG,IAAI;IACH,OAAAxB,aAAa,CAAC8G,wBAAwB,CAACtF,IAAI,CAAC,CAAC,IAC7CxB,aAAa,CAAC+G,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAGvF,IAAI,CAAC,CAAC;EAD9C,CAC8C,CACjD,QACD;EAEF,OAAOkG,KAAK,CAACC,IAAI,CAACP,uBAAuB,CAAC,CACvCK,MAAM,CAAC,UAACjG,IAAI;IAAK,QAACtB,qBAAqB,CAACsB,IAAI,EAAEiF,kBAAkB,CAAC;EAAhD,CAAgD,CAAC,CAClErF,GAAG,CAAC,UAACI,IAAI;IACR,IAAMoG,mBAAmB,GAAGd,wBAAwB,CAACtF,IAAI,CAAC;IAC1D,IAAMC,OAAO,GAAG3B,cAAc,CAAC8H,mBAAmB,CAAC;IACnD,IAAMC,WAAW,GAAG,IAAItG,iBAAiB,CACvCC,IAAI,EACJC,OAAO,EACPC,QAAQ,EACRsF,kBAAkB,CAACxF,IAAI,CAAC,EACxBI,OAAO,EACPqF,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAGzF,IAAI,CAAC,CAChC;IAED,IAAMsG,OAAO,GAAGlB,YAAY,CAACa,MAAM,CACjC,UAACM,IAAI;MAAK,OAAAA,IAAI,CAACC,eAAe,KAAKxG,IAAI;IAA7B,CAA6B,CACxC;IACD,IAAIsG,OAAO,CAACpH,MAAM,GAAG,CAAC,IAAIgG,iBAAiB,EAAE;MAC3CmB,WAAW,CAACxD,aAAa,CAACqC,iBAAiB,CAAC;;IAG9C,OAAOmB,WAAW;EACpB,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}