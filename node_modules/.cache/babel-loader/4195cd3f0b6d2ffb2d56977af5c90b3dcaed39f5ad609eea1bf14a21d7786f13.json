{"ast":null,"code":"import { assertUserIdentity, isPlainObject, ValidationError, assertEventExists, assertEventType, assertTrackEventName } from '@segment/analytics-core';\nfunction validate(ctx) {\n  var _a;\n  var event = ctx.event;\n  assertEventExists(event);\n  assertEventType(event);\n  if (event.type === 'track') {\n    assertTrackEventName(event);\n  }\n  var props = (_a = event.properties) !== null && _a !== void 0 ? _a : event.traits;\n  if (event.type !== 'alias' && !isPlainObject(props)) {\n    throw new ValidationError('.properties', 'is not an object');\n  }\n  assertUserIdentity(event);\n  return ctx;\n}\nexport var validation = {\n  name: 'Event Validation',\n  type: 'before',\n  version: '1.0.0',\n  isLoaded: function () {\n    return true;\n  },\n  load: function () {\n    return Promise.resolve();\n  },\n  track: validate,\n  identify: validate,\n  page: validate,\n  alias: validate,\n  group: validate,\n  screen: validate\n};","map":{"version":3,"names":["assertUserIdentity","isPlainObject","ValidationError","assertEventExists","assertEventType","assertTrackEventName","validate","ctx","event","type","props","_a","properties","traits","validation","name","version","isLoaded","load","Promise","resolve","track","identify","page","alias","group","screen"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/plugins/validation/index.ts"],"sourcesContent":["import type { Plugin } from '../../core/plugin'\nimport type { Context } from '../../core/context'\nimport {\n  assertUserIdentity,\n  isPlainObject,\n  ValidationError,\n  assertEventExists,\n  assertEventType,\n  assertTrackEventName,\n} from '@segment/analytics-core'\n\nfunction validate(ctx: Context): Context {\n  const event = ctx.event\n  assertEventExists(event)\n  assertEventType(event)\n\n  if (event.type === 'track') {\n    assertTrackEventName(event)\n  }\n\n  const props = event.properties ?? event.traits\n  if (event.type !== 'alias' && !isPlainObject(props)) {\n    throw new ValidationError('.properties', 'is not an object')\n  }\n\n  assertUserIdentity(event)\n  return ctx\n}\n\nexport const validation: Plugin = {\n  name: 'Event Validation',\n  type: 'before',\n  version: '1.0.0',\n\n  isLoaded: () => true,\n  load: () => Promise.resolve(),\n\n  track: validate,\n  identify: validate,\n  page: validate,\n  alias: validate,\n  group: validate,\n  screen: validate,\n}\n"],"mappings":"AAEA,SACEA,kBAAkB,EAClBC,aAAa,EACbC,eAAe,EACfC,iBAAiB,EACjBC,eAAe,EACfC,oBAAoB,QACf,yBAAyB;AAEhC,SAASC,QAAQA,CAACC,GAAY;;EAC5B,IAAMC,KAAK,GAAGD,GAAG,CAACC,KAAK;EACvBL,iBAAiB,CAACK,KAAK,CAAC;EACxBJ,eAAe,CAACI,KAAK,CAAC;EAEtB,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;IAC1BJ,oBAAoB,CAACG,KAAK,CAAC;;EAG7B,IAAME,KAAK,GAAG,CAAAC,EAAA,GAAAH,KAAK,CAACI,UAAU,cAAAD,EAAA,cAAAA,EAAA,GAAIH,KAAK,CAACK,MAAM;EAC9C,IAAIL,KAAK,CAACC,IAAI,KAAK,OAAO,IAAI,CAACR,aAAa,CAACS,KAAK,CAAC,EAAE;IACnD,MAAM,IAAIR,eAAe,CAAC,aAAa,EAAE,kBAAkB,CAAC;;EAG9DF,kBAAkB,CAACQ,KAAK,CAAC;EACzB,OAAOD,GAAG;AACZ;AAEA,OAAO,IAAMO,UAAU,GAAW;EAChCC,IAAI,EAAE,kBAAkB;EACxBN,IAAI,EAAE,QAAQ;EACdO,OAAO,EAAE,OAAO;EAEhBC,QAAQ,EAAE,SAAAA,CAAA;IAAM,WAAI;EAAJ,CAAI;EACpBC,IAAI,EAAE,SAAAA,CAAA;IAAM,OAAAC,OAAO,CAACC,OAAO,EAAE;EAAjB,CAAiB;EAE7BC,KAAK,EAAEf,QAAQ;EACfgB,QAAQ,EAAEhB,QAAQ;EAClBiB,IAAI,EAAEjB,QAAQ;EACdkB,KAAK,EAAElB,QAAQ;EACfmB,KAAK,EAAEnB,QAAQ;EACfoB,MAAM,EAAEpB;CACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}