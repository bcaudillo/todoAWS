{"ast":null,"code":"import { __assign } from \"tslib\";\nvar CoreLogger = /** @class */function () {\n  function CoreLogger() {\n    this._logs = [];\n  }\n  CoreLogger.prototype.log = function (level, message, extras) {\n    var time = new Date();\n    this._logs.push({\n      level: level,\n      message: message,\n      time: time,\n      extras: extras\n    });\n  };\n  Object.defineProperty(CoreLogger.prototype, \"logs\", {\n    get: function () {\n      return this._logs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CoreLogger.prototype.flush = function () {\n    if (this.logs.length > 1) {\n      var formatted = this._logs.reduce(function (logs, log) {\n        var _a;\n        var _b, _c;\n        var line = __assign(__assign({}, log), {\n          json: JSON.stringify(log.extras, null, ' '),\n          extras: log.extras\n        });\n        delete line['time'];\n        var key = (_c = (_b = log.time) === null || _b === void 0 ? void 0 : _b.toISOString()) !== null && _c !== void 0 ? _c : '';\n        if (logs[key]) {\n          key = \"\".concat(key, \"-\").concat(Math.random());\n        }\n        return __assign(__assign({}, logs), (_a = {}, _a[key] = line, _a));\n      }, {});\n      // ie doesn't like console.table\n      if (console.table) {\n        console.table(formatted);\n      } else {\n        console.log(formatted);\n      }\n    } else {\n      this.logs.forEach(function (logEntry) {\n        var level = logEntry.level,\n          message = logEntry.message,\n          extras = logEntry.extras;\n        if (level === 'info' || level === 'debug') {\n          console.log(message, extras !== null && extras !== void 0 ? extras : '');\n        } else {\n          console[level](message, extras !== null && extras !== void 0 ? extras : '');\n        }\n      });\n    }\n    this._logs = [];\n  };\n  return CoreLogger;\n}();\nexport { CoreLogger };","map":{"version":3,"names":["CoreLogger","_logs","prototype","log","level","message","extras","time","Date","push","Object","defineProperty","get","flush","logs","length","formatted","reduce","line","__assign","json","JSON","stringify","key","_c","_b","toISOString","concat","Math","random","_a","console","table","forEach","logEntry"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-core/src/logger/index.ts"],"sourcesContent":["export type LogLevel = 'debug' | 'info' | 'warn' | 'error'\nexport type LogMessage = {\n  level: LogLevel\n  message: string\n  time?: Date\n  extras?: Record<string, any>\n}\n\nexport interface GenericLogger {\n  log(level: LogLevel, message: string, extras?: object): void\n  flush(): void\n  logs: LogMessage[]\n}\n\nexport class CoreLogger implements GenericLogger {\n  private _logs: LogMessage[] = []\n\n  log(level: LogLevel, message: string, extras?: object) {\n    const time = new Date()\n    this._logs.push({\n      level,\n      message,\n      time,\n      extras,\n    })\n  }\n\n  public get logs(): LogMessage[] {\n    return this._logs\n  }\n\n  public flush(): void {\n    if (this.logs.length > 1) {\n      const formatted = this._logs.reduce((logs, log) => {\n        const line = {\n          ...log,\n          json: JSON.stringify(log.extras, null, ' '),\n          extras: log.extras,\n        }\n\n        delete line['time']\n\n        let key = log.time?.toISOString() ?? ''\n        if (logs[key]) {\n          key = `${key}-${Math.random()}`\n        }\n\n        return {\n          ...logs,\n          [key]: line,\n        }\n      }, {} as Record<string, LogMessage>)\n\n      // ie doesn't like console.table\n      if (console.table) {\n        console.table(formatted)\n      } else {\n        console.log(formatted)\n      }\n    } else {\n      this.logs.forEach((logEntry) => {\n        const { level, message, extras } = logEntry\n\n        if (level === 'info' || level === 'debug') {\n          console.log(message, extras ?? '')\n        } else {\n          console[level](message, extras ?? '')\n        }\n      })\n    }\n\n    this._logs = []\n  }\n}\n"],"mappings":";AAcA,IAAAA,UAAA;EAAA,SAAAA,WAAA;IACU,KAAAC,KAAK,GAAiB,EAAE;EA0DlC;EAxDED,UAAA,CAAAE,SAAA,CAAAC,GAAG,GAAH,UAAIC,KAAe,EAAEC,OAAe,EAAEC,MAAe;IACnD,IAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACvB,IAAI,CAACP,KAAK,CAACQ,IAAI,CAAC;MACdL,KAAK,EAAAA,KAAA;MACLC,OAAO,EAAAA,OAAA;MACPE,IAAI,EAAAA,IAAA;MACJD,MAAM,EAAAA;KACP,CAAC;EACJ,CAAC;EAEDI,MAAA,CAAAC,cAAA,CAAWX,UAAA,CAAAE,SAAA,QAAI;SAAf,SAAAU,CAAA;MACE,OAAO,IAAI,CAACX,KAAK;IACnB,CAAC;;;;EAEMD,UAAA,CAAAE,SAAA,CAAAW,KAAK,GAAZ;IACE,IAAI,IAAI,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACxB,IAAMC,SAAS,GAAG,IAAI,CAACf,KAAK,CAACgB,MAAM,CAAC,UAACH,IAAI,EAAEX,GAAG;;;QAC5C,IAAMe,IAAI,GAAAC,QAAA,CAAAA,QAAA,KACLhB,GAAG;UACNiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,GAAG,CAACG,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;UAC3CA,MAAM,EAAEH,GAAG,CAACG;QAAM,EACnB;QAED,OAAOY,IAAI,CAAC,MAAM,CAAC;QAEnB,IAAIK,GAAG,GAAG,CAAAC,EAAA,IAAAC,EAAA,GAAAtB,GAAG,CAACI,IAAI,cAAAkB,EAAA,uBAAAA,EAAA,CAAEC,WAAW,EAAE,cAAAF,EAAA,cAAAA,EAAA,GAAI,EAAE;QACvC,IAAIV,IAAI,CAACS,GAAG,CAAC,EAAE;UACbA,GAAG,GAAG,GAAAI,MAAA,CAAGJ,GAAG,OAAAI,MAAA,CAAIC,IAAI,CAACC,MAAM,EAAE,CAAE;;QAGjC,OAAAV,QAAA,CAAAA,QAAA,KACKL,IAAI,IAAAgB,EAAA,OAAAA,EAAA,CACNP,GAAG,IAAGL,IAAI,EAAAY,EAAA;MAEf,CAAC,EAAE,EAAgC,CAAC;MAEpC;MACA,IAAIC,OAAO,CAACC,KAAK,EAAE;QACjBD,OAAO,CAACC,KAAK,CAAChB,SAAS,CAAC;OACzB,MAAM;QACLe,OAAO,CAAC5B,GAAG,CAACa,SAAS,CAAC;;KAEzB,MAAM;MACL,IAAI,CAACF,IAAI,CAACmB,OAAO,CAAC,UAACC,QAAQ;QACjB,IAAA9B,KAAK,GAAsB8B,QAAQ,CAAA9B,KAA9B;UAAEC,OAAO,GAAa6B,QAAQ,CAAA7B,OAArB;UAAEC,MAAM,GAAK4B,QAAQ,CAAA5B,MAAb;QAE9B,IAAIF,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,OAAO,EAAE;UACzC2B,OAAO,CAAC5B,GAAG,CAACE,OAAO,EAAEC,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE,CAAC;SACnC,MAAM;UACLyB,OAAO,CAAC3B,KAAK,CAAC,CAACC,OAAO,EAAEC,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE,CAAC;;MAEzC,CAAC,CAAC;;IAGJ,IAAI,CAACL,KAAK,GAAG,EAAE;EACjB,CAAC;EACH,OAAAD,UAAC;AAAD,CAAC,CA3DD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}