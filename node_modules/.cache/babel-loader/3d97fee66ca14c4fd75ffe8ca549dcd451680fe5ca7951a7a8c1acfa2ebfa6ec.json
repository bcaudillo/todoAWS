{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Screen = void 0;\nvar inherits_1 = __importDefault(require(\"inherits\"));\nvar page_1 = require(\"./page\");\nvar track_1 = require(\"./track\");\nfunction Screen(dictionary, opts) {\n  page_1.Page.call(this, dictionary, opts);\n}\nexports.Screen = Screen;\ninherits_1.default(Screen, page_1.Page);\nScreen.prototype.action = function () {\n  return \"screen\";\n};\nScreen.prototype.type = Screen.prototype.action;\nScreen.prototype.event = function (name) {\n  return name ? \"Viewed \" + name + \" Screen\" : \"Loaded a Screen\";\n};\nScreen.prototype.track = function (name) {\n  var json = this.json();\n  json.event = this.event(name);\n  json.timestamp = this.timestamp();\n  json.properties = this.properties();\n  return new track_1.Track(json, this.opts);\n};","map":{"version":3,"names":["inherits_1","__importDefault","require","page_1","track_1","Screen","dictionary","opts","Page","call","exports","default","prototype","action","type","event","name","track","json","timestamp","properties","Track"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/facade/lib/screen.js"],"sourcesContent":["\"use strict\";\n\nimport inherit from \"inherits\";\nimport { Page } from \"./page\";\nimport { Track } from \"./track\";\n\n/**\n * Initialize a new `Screen` facade with a `dictionary` of arguments.\n *\n * Note that this class extends {@link Page}, so its methods are available to\n * instances of this class as well.\n *\n * @param {Object} dictionary - The object to wrap.\n * @param {string} [dictionary.category] - The page category.\n * @param {string} [dictionary.name] - The page name.\n * @param {string} [dictionary.properties] - The page properties.\n * @param {Object} opts - Options about what kind of Facade to create.\n *\n * @augments Page\n */\nexport function Screen(dictionary, opts) {\n  Page.call(this, dictionary, opts);\n}\n\ninherit(Screen, Page);\n\n/**\n * Return the type of facade this is. This will always return `\"screen\"`.\n *\n * @return {string}\n */\nScreen.prototype.action = function () {\n  return \"screen\";\n};\n\n/**\n * An alias for {@link Screen#action}.\n *\n * @function\n * @return {string}\n */\nScreen.prototype.type = Screen.prototype.action;\n\n/**\n * Get an event name from this screen call. If `name` is present, this will be\n * `Viewed $name Screen`; otherwise, it will be `Loaded a Screen`.\n *\n * @param {string} name - The name of this screen.\n * @return {string}\n */\nScreen.prototype.event = function (name) {\n  return name ? \"Viewed \" + name + \" Screen\" : \"Loaded a Screen\";\n};\n\n/**\n * Convert this Screen to a {@link Track} facade. The inputted `name` will be\n * converted to the Track's event name via {@link Screen#event}.\n *\n * @param {string} name\n * @return {Track}\n */\nScreen.prototype.track = function (name) {\n  let json = this.json();\n  json.event = this.event(name);\n  json.timestamp = this.timestamp();\n  json.properties = this.properties();\n  return new Track(json, this.opts);\n};\n"],"mappings":"AAAA,YAAY;;;;;;;;;;;AAEZ,IAAAA,UAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAgBA,SAAgBG,MAAMA,CAACC,UAAU,EAAEC,IAAI;EACrCJ,MAAA,CAAAK,IAAI,CAACC,IAAI,CAAC,IAAI,EAAEH,UAAU,EAAEC,IAAI,CAAC;AACnC;AAFAG,OAAA,CAAAL,MAAA,GAAAA,MAAA;AAIAL,UAAA,CAAAW,OAAO,CAACN,MAAM,EAAEF,MAAA,CAAAK,IAAI,CAAC;AAOrBH,MAAM,CAACO,SAAS,CAACC,MAAM,GAAG;EACxB,OAAO,QAAQ;AACjB,CAAC;AAQDR,MAAM,CAACO,SAAS,CAACE,IAAI,GAAGT,MAAM,CAACO,SAAS,CAACC,MAAM;AAS/CR,MAAM,CAACO,SAAS,CAACG,KAAK,GAAG,UAAUC,IAAI;EACrC,OAAOA,IAAI,GAAG,SAAS,GAAGA,IAAI,GAAG,SAAS,GAAG,iBAAiB;AAChE,CAAC;AASDX,MAAM,CAACO,SAAS,CAACK,KAAK,GAAG,UAAUD,IAAI;EACrC,IAAIE,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;EACtBA,IAAI,CAACH,KAAK,GAAG,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC;EAC7BE,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,EAAE;EACjCD,IAAI,CAACE,UAAU,GAAG,IAAI,CAACA,UAAU,EAAE;EACnC,OAAO,IAAIhB,OAAA,CAAAiB,KAAK,CAACH,IAAI,EAAE,IAAI,CAACX,IAAI,CAAC;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}