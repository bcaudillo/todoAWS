{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint8\n*\n* @example\n* var ctor = require( '@stdlib/array-uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\nvar hasUint8ArraySupport = require('@stdlib/assert-has-uint8array-support');\nvar builtin = require('./uint8array.js');\nvar polyfill = require('./polyfill.js');\n\n// MAIN //\n\nvar ctor;\nif (hasUint8ArraySupport()) {\n  ctor = builtin;\n} else {\n  ctor = polyfill;\n}\n\n// EXPORTS //\n\nmodule.exports = ctor;","map":{"version":3,"names":["hasUint8ArraySupport","require","builtin","polyfill","ctor","module","exports"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@stdlib/array-uint8/lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint8\n*\n* @example\n* var ctor = require( '@stdlib/array-uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( '@stdlib/assert-has-uint8array-support' );\nvar builtin = require( './uint8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA,IAAIA,oBAAoB,GAAGC,OAAO,CAAE,uCAAwC,CAAC;AAC7E,IAAIC,OAAO,GAAGD,OAAO,CAAE,iBAAkB,CAAC;AAC1C,IAAIE,QAAQ,GAAGF,OAAO,CAAE,eAAgB,CAAC;;AAGzC;;AAEA,IAAIG,IAAI;AACR,IAAKJ,oBAAoB,CAAC,CAAC,EAAG;EAC7BI,IAAI,GAAGF,OAAO;AACf,CAAC,MAAM;EACNE,IAAI,GAAGD,QAAQ;AAChB;;AAGA;;AAEAE,MAAM,CAACC,OAAO,GAAGF,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}