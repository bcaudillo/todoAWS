{"ast":null,"code":"/**\n * Stores the global window analytics key\n */\nvar _globalAnalyticsKey = 'analytics';\n/**\n * Gets the global analytics/buffer\n * @param key name of the window property where the buffer is stored (default: analytics)\n * @returns AnalyticsSnippet\n */\nexport function getGlobalAnalytics() {\n  return window[_globalAnalyticsKey];\n}\n/**\n * Replaces the global window key for the analytics/buffer object\n * @param key key name\n */\nexport function setGlobalAnalyticsKey(key) {\n  _globalAnalyticsKey = key;\n}\n/**\n * Sets the global analytics object\n * @param analytics analytics snippet\n */\nexport function setGlobalAnalytics(analytics) {\n  ;\n  window[_globalAnalyticsKey] = analytics;\n}","map":{"version":3,"names":["_globalAnalyticsKey","getGlobalAnalytics","window","setGlobalAnalyticsKey","key","setGlobalAnalytics","analytics"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/lib/global-analytics-helper.ts"],"sourcesContent":["import { AnalyticsSnippet } from '../browser/standalone-interface'\n\n/**\n * Stores the global window analytics key\n */\nlet _globalAnalyticsKey = 'analytics'\n\n/**\n * Gets the global analytics/buffer\n * @param key name of the window property where the buffer is stored (default: analytics)\n * @returns AnalyticsSnippet\n */\nexport function getGlobalAnalytics(): AnalyticsSnippet | undefined {\n  return (window as any)[_globalAnalyticsKey]\n}\n\n/**\n * Replaces the global window key for the analytics/buffer object\n * @param key key name\n */\nexport function setGlobalAnalyticsKey(key: string) {\n  _globalAnalyticsKey = key\n}\n\n/**\n * Sets the global analytics object\n * @param analytics analytics snippet\n */\nexport function setGlobalAnalytics(analytics: AnalyticsSnippet): void {\n  ;(window as any)[_globalAnalyticsKey] = analytics\n}\n"],"mappings":"AAEA;;;AAGA,IAAIA,mBAAmB,GAAG,WAAW;AAErC;;;;;AAKA,OAAM,SAAUC,kBAAkBA,CAAA;EAChC,OAAQC,MAAc,CAACF,mBAAmB,CAAC;AAC7C;AAEA;;;;AAIA,OAAM,SAAUG,qBAAqBA,CAACC,GAAW;EAC/CJ,mBAAmB,GAAGI,GAAG;AAC3B;AAEA;;;;AAIA,OAAM,SAAUC,kBAAkBA,CAACC,SAA2B;EAC5D;EAAEJ,MAAc,CAACF,mBAAmB,CAAC,GAAGM,SAAS;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}