{"ast":null,"code":"export var isDestinationPluginWithAddMiddleware = function (plugin) {\n  // FYI: segment's plugin does not currently have an 'addMiddleware' method\n  return 'addMiddleware' in plugin && plugin.type === 'destination';\n};","map":{"version":3,"names":["isDestinationPluginWithAddMiddleware","plugin","type"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/core/plugin/index.ts"],"sourcesContent":["import type { CorePlugin } from '@segment/analytics-core'\nimport type { DestinationMiddlewareFunction } from '../../plugins/middleware'\nimport type { Analytics } from '../analytics'\nimport type { Context } from '../context'\n\nexport interface Plugin extends CorePlugin<Context, Analytics> {}\n\nexport interface InternalPluginWithAddMiddleware extends Plugin {\n  addMiddleware: (...fns: DestinationMiddlewareFunction[]) => void\n}\n\nexport interface InternalDestinationPluginWithAddMiddleware\n  extends InternalPluginWithAddMiddleware {\n  type: 'destination'\n}\n\nexport const isDestinationPluginWithAddMiddleware = (\n  plugin: Plugin\n): plugin is InternalDestinationPluginWithAddMiddleware => {\n  // FYI: segment's plugin does not currently have an 'addMiddleware' method\n  return 'addMiddleware' in plugin && plugin.type === 'destination'\n}\n"],"mappings":"AAgBA,OAAO,IAAMA,oCAAoC,GAAG,SAAAA,CAClDC,MAAc;EAEd;EACA,OAAO,eAAe,IAAIA,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,aAAa;AACnE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}