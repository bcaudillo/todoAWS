{"ast":null,"code":"/**\n * Data storage using browser's localStorage\n */\nvar LocalStorage = /** @class */function () {\n  function LocalStorage() {}\n  LocalStorage.prototype.localStorageWarning = function (key, state) {\n    console.warn(\"Unable to access \".concat(key, \", localStorage may be \").concat(state));\n  };\n  LocalStorage.prototype.get = function (key) {\n    var _a;\n    try {\n      var val = localStorage.getItem(key);\n      if (val === null) {\n        return null;\n      }\n      try {\n        return (_a = JSON.parse(val)) !== null && _a !== void 0 ? _a : null;\n      } catch (e) {\n        return val !== null && val !== void 0 ? val : null;\n      }\n    } catch (err) {\n      this.localStorageWarning(key, 'unavailable');\n      return null;\n    }\n  };\n  LocalStorage.prototype.set = function (key, value) {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (_a) {\n      this.localStorageWarning(key, 'full');\n    }\n  };\n  LocalStorage.prototype.remove = function (key) {\n    try {\n      return localStorage.removeItem(key);\n    } catch (err) {\n      this.localStorageWarning(key, 'unavailable');\n    }\n  };\n  return LocalStorage;\n}();\nexport { LocalStorage };","map":{"version":3,"names":["LocalStorage","prototype","localStorageWarning","key","state","console","warn","concat","get","val","localStorage","getItem","_a","JSON","parse","e","err","set","value","setItem","stringify","remove","removeItem"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/core/storage/localStorage.ts"],"sourcesContent":["import { StorageObject, Store } from './types'\n\n/**\n * Data storage using browser's localStorage\n */\nexport class LocalStorage<Data extends StorageObject = StorageObject>\n  implements Store<Data>\n{\n  private localStorageWarning(key: keyof Data, state: 'full' | 'unavailable') {\n    console.warn(`Unable to access ${key}, localStorage may be ${state}`)\n  }\n\n  get<K extends keyof Data>(key: K): Data[K] | null {\n    try {\n      const val = localStorage.getItem(key)\n      if (val === null) {\n        return null\n      }\n      try {\n        return JSON.parse(val) ?? null\n      } catch (e) {\n        return (val ?? null) as unknown as Data[K] | null\n      }\n    } catch (err) {\n      this.localStorageWarning(key, 'unavailable')\n      return null\n    }\n  }\n\n  set<K extends keyof Data>(key: K, value: Data[K] | null): void {\n    try {\n      localStorage.setItem(key, JSON.stringify(value))\n    } catch {\n      this.localStorageWarning(key, 'full')\n    }\n  }\n\n  remove<K extends keyof Data>(key: K): void {\n    try {\n      return localStorage.removeItem(key)\n    } catch (err) {\n      this.localStorageWarning(key, 'unavailable')\n    }\n  }\n}\n"],"mappings":"AAEA;;;AAGA,IAAAA,YAAA;EAAA,SAAAA,aAAA,GAuCA;EApCUA,YAAA,CAAAC,SAAA,CAAAC,mBAAmB,GAA3B,UAA4BC,GAAe,EAAEC,KAA6B;IACxEC,OAAO,CAACC,IAAI,CAAC,oBAAAC,MAAA,CAAoBJ,GAAG,4BAAAI,MAAA,CAAyBH,KAAK,CAAE,CAAC;EACvE,CAAC;EAEDJ,YAAA,CAAAC,SAAA,CAAAO,GAAG,GAAH,UAA0BL,GAAM;;IAC9B,IAAI;MACF,IAAMM,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC;MACrC,IAAIM,GAAG,KAAK,IAAI,EAAE;QAChB,OAAO,IAAI;;MAEb,IAAI;QACF,OAAO,CAAAG,EAAA,GAAAC,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,cAAAG,EAAA,cAAAA,EAAA,GAAI,IAAI;OAC/B,CAAC,OAAOG,CAAC,EAAE;QACV,OAAQN,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAI,IAAI;;KAEtB,CAAC,OAAOO,GAAG,EAAE;MACZ,IAAI,CAACd,mBAAmB,CAACC,GAAG,EAAE,aAAa,CAAC;MAC5C,OAAO,IAAI;;EAEf,CAAC;EAEDH,YAAA,CAAAC,SAAA,CAAAgB,GAAG,GAAH,UAA0Bd,GAAM,EAAEe,KAAqB;IACrD,IAAI;MACFR,YAAY,CAACS,OAAO,CAAChB,GAAG,EAAEU,IAAI,CAACO,SAAS,CAACF,KAAK,CAAC,CAAC;KACjD,CAAC,OAAAN,EAAA,EAAM;MACN,IAAI,CAACV,mBAAmB,CAACC,GAAG,EAAE,MAAM,CAAC;;EAEzC,CAAC;EAEDH,YAAA,CAAAC,SAAA,CAAAoB,MAAM,GAAN,UAA6BlB,GAAM;IACjC,IAAI;MACF,OAAOO,YAAY,CAACY,UAAU,CAACnB,GAAG,CAAC;KACpC,CAAC,OAAOa,GAAG,EAAE;MACZ,IAAI,CAACd,mBAAmB,CAACC,GAAG,EAAE,aAAa,CAAC;;EAEhD,CAAC;EACH,OAAAH,YAAC;AAAD,CAAC,CAvCD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}