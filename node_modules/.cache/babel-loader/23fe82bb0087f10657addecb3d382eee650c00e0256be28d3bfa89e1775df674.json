{"ast":null,"code":"'use strict';\n\nvar isodate = require('@segment/isodate');\n\n/**\n * Expose `traverse`.\n */\nmodule.exports = traverse;\n\n/**\n * Recursively traverse an object or array, and convert\n * all ISO date strings parse into Date objects.\n *\n * @param {Object} input - object, array, or string to convert\n * @param {Boolean} strict - only convert strings with year, month, and date\n * @return {Object}\n */\nfunction traverse(input, strict) {\n  if (strict === undefined) strict = true;\n  if (input && typeof input === 'object') {\n    return traverseObject(input, strict);\n  } else if (Array.isArray(input)) {\n    return traverseArray(input, strict);\n  } else if (isodate.is(input, strict)) {\n    return isodate.parse(input);\n  }\n  return input;\n}\n\n/**\n * Object traverser helper function.\n *\n * @param {Object} obj - object to traverse\n * @param {Boolean} strict - only convert strings with year, month, and date\n * @return {Object}\n */\nfunction traverseObject(obj, strict) {\n  Object.keys(obj).forEach(function (key) {\n    obj[key] = traverse(obj[key], strict);\n  });\n  return obj;\n}\n\n/**\n * Array traverser helper function\n *\n * @param {Array} arr - array to traverse\n * @param {Boolean} strict - only convert strings with year, month, and date\n * @return {Array}\n */\nfunction traverseArray(arr, strict) {\n  arr.forEach(function (value, index) {\n    arr[index] = traverse(value, strict);\n  });\n  return arr;\n}","map":{"version":3,"names":["isodate","require","module","exports","traverse","input","strict","undefined","traverseObject","Array","isArray","traverseArray","is","parse","obj","Object","keys","forEach","key","arr","value","index"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/isodate-traverse/lib/index.js"],"sourcesContent":["'use strict';\n\nvar isodate = require('@segment/isodate');\n\n/**\n * Expose `traverse`.\n */\nmodule.exports = traverse;\n\n/**\n * Recursively traverse an object or array, and convert\n * all ISO date strings parse into Date objects.\n *\n * @param {Object} input - object, array, or string to convert\n * @param {Boolean} strict - only convert strings with year, month, and date\n * @return {Object}\n */\nfunction traverse(input, strict) {\n  if (strict === undefined) strict = true;\n  if (input && typeof input === 'object') {\n    return traverseObject(input, strict);\n  } else if (Array.isArray(input)) {\n    return traverseArray(input, strict);\n  } else if (isodate.is(input, strict)) {\n    return isodate.parse(input);\n  }\n  return input;\n}\n\n/**\n * Object traverser helper function.\n *\n * @param {Object} obj - object to traverse\n * @param {Boolean} strict - only convert strings with year, month, and date\n * @return {Object}\n */\nfunction traverseObject(obj, strict) {\n  Object.keys(obj).forEach(function(key) {\n    obj[key] = traverse(obj[key], strict);\n  });\n  return obj;\n}\n\n/**\n * Array traverser helper function\n *\n * @param {Array} arr - array to traverse\n * @param {Boolean} strict - only convert strings with year, month, and date\n * @return {Array}\n */\nfunction traverseArray(arr, strict) {\n  arr.forEach(function(value, index) {\n    arr[index] = traverse(value, strict);\n  });\n  return arr;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAEzC;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAGC,QAAQ;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC/B,IAAIA,MAAM,KAAKC,SAAS,EAAED,MAAM,GAAG,IAAI;EACvC,IAAID,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACtC,OAAOG,cAAc,CAACH,KAAK,EAAEC,MAAM,CAAC;EACtC,CAAC,MAAM,IAAIG,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;IAC/B,OAAOM,aAAa,CAACN,KAAK,EAAEC,MAAM,CAAC;EACrC,CAAC,MAAM,IAAIN,OAAO,CAACY,EAAE,CAACP,KAAK,EAAEC,MAAM,CAAC,EAAE;IACpC,OAAON,OAAO,CAACa,KAAK,CAACR,KAAK,CAAC;EAC7B;EACA,OAAOA,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,cAAcA,CAACM,GAAG,EAAER,MAAM,EAAE;EACnCS,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAACG,OAAO,CAAC,UAASC,GAAG,EAAE;IACrCJ,GAAG,CAACI,GAAG,CAAC,GAAGd,QAAQ,CAACU,GAAG,CAACI,GAAG,CAAC,EAAEZ,MAAM,CAAC;EACvC,CAAC,CAAC;EACF,OAAOQ,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,aAAaA,CAACQ,GAAG,EAAEb,MAAM,EAAE;EAClCa,GAAG,CAACF,OAAO,CAAC,UAASG,KAAK,EAAEC,KAAK,EAAE;IACjCF,GAAG,CAACE,KAAK,CAAC,GAAGjB,QAAQ,CAACgB,KAAK,EAAEd,MAAM,CAAC;EACtC,CAAC,CAAC;EACF,OAAOa,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}