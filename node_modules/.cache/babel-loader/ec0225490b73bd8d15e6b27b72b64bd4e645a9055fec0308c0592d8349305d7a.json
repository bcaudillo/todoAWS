{"ast":null,"code":"import { __assign } from \"tslib\";\nexport function normalize(analytics, json, settings, integrations) {\n  var _a;\n  var user = analytics.user();\n  delete json.options;\n  json.writeKey = settings === null || settings === void 0 ? void 0 : settings.apiKey;\n  json.userId = json.userId || user.id();\n  json.anonymousId = json.anonymousId || user.anonymousId();\n  json.sentAt = new Date();\n  var failed = analytics.queue.failedInitializations || [];\n  if (failed.length > 0) {\n    json._metadata = {\n      failedInitializations: failed\n    };\n  }\n  var bundled = [];\n  var unbundled = [];\n  for (var key in integrations) {\n    var integration = integrations[key];\n    if (key === 'Segment.io') {\n      bundled.push(key);\n    }\n    if (integration.bundlingStatus === 'bundled') {\n      bundled.push(key);\n    }\n    if (integration.bundlingStatus === 'unbundled') {\n      unbundled.push(key);\n    }\n  }\n  // This will make sure that the disabled cloud mode destinations will be\n  // included in the unbundled list.\n  for (var _i = 0, _b = (settings === null || settings === void 0 ? void 0 : settings.unbundledIntegrations) || []; _i < _b.length; _i++) {\n    var settingsUnbundled = _b[_i];\n    if (!unbundled.includes(settingsUnbundled)) {\n      unbundled.push(settingsUnbundled);\n    }\n  }\n  var configIds = (_a = settings === null || settings === void 0 ? void 0 : settings.maybeBundledConfigIds) !== null && _a !== void 0 ? _a : {};\n  var bundledConfigIds = [];\n  bundled.sort().forEach(function (name) {\n    var _a;\n    ;\n    ((_a = configIds[name]) !== null && _a !== void 0 ? _a : []).forEach(function (id) {\n      bundledConfigIds.push(id);\n    });\n  });\n  if ((settings === null || settings === void 0 ? void 0 : settings.addBundledMetadata) !== false) {\n    json._metadata = __assign(__assign({}, json._metadata), {\n      bundled: bundled.sort(),\n      unbundled: unbundled.sort(),\n      bundledIds: bundledConfigIds\n    });\n  }\n  return json;\n}","map":{"version":3,"names":["normalize","analytics","json","settings","integrations","user","options","writeKey","apiKey","userId","id","anonymousId","sentAt","Date","failed","queue","failedInitializations","length","_metadata","bundled","unbundled","key","integration","push","bundlingStatus","_i","_b","unbundledIntegrations","settingsUnbundled","includes","configIds","_a","maybeBundledConfigIds","bundledConfigIds","sort","forEach","name","addBundledMetadata","__assign","bundledIds"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/plugins/segmentio/normalize.ts"],"sourcesContent":["import { Analytics } from '../../core/analytics'\nimport { LegacySettings } from '../../browser'\nimport { SegmentFacade } from '../../lib/to-facade'\nimport { SegmentioSettings } from './index'\n\nexport function normalize(\n  analytics: Analytics,\n  json: ReturnType<SegmentFacade['json']>,\n  settings?: SegmentioSettings,\n  integrations?: LegacySettings['integrations']\n): object {\n  const user = analytics.user()\n\n  delete json.options\n\n  json.writeKey = settings?.apiKey\n\n  json.userId = json.userId || user.id()\n  json.anonymousId = json.anonymousId || user.anonymousId()\n\n  json.sentAt = new Date()\n\n  const failed = analytics.queue.failedInitializations || []\n  if (failed.length > 0) {\n    json._metadata = { failedInitializations: failed }\n  }\n\n  const bundled: string[] = []\n  const unbundled: string[] = []\n\n  for (const key in integrations) {\n    const integration = integrations[key]\n    if (key === 'Segment.io') {\n      bundled.push(key)\n    }\n    if (integration.bundlingStatus === 'bundled') {\n      bundled.push(key)\n    }\n    if (integration.bundlingStatus === 'unbundled') {\n      unbundled.push(key)\n    }\n  }\n\n  // This will make sure that the disabled cloud mode destinations will be\n  // included in the unbundled list.\n  for (const settingsUnbundled of settings?.unbundledIntegrations || []) {\n    if (!unbundled.includes(settingsUnbundled)) {\n      unbundled.push(settingsUnbundled)\n    }\n  }\n\n  const configIds = settings?.maybeBundledConfigIds ?? {}\n  const bundledConfigIds: string[] = []\n\n  bundled.sort().forEach((name) => {\n    ;(configIds[name] ?? []).forEach((id) => {\n      bundledConfigIds.push(id)\n    })\n  })\n\n  if (settings?.addBundledMetadata !== false) {\n    json._metadata = {\n      ...json._metadata,\n      bundled: bundled.sort(),\n      unbundled: unbundled.sort(),\n      bundledIds: bundledConfigIds,\n    }\n  }\n\n  return json\n}\n"],"mappings":";AAKA,OAAM,SAAUA,SAASA,CACvBC,SAAoB,EACpBC,IAAuC,EACvCC,QAA4B,EAC5BC,YAA6C;;EAE7C,IAAMC,IAAI,GAAGJ,SAAS,CAACI,IAAI,EAAE;EAE7B,OAAOH,IAAI,CAACI,OAAO;EAEnBJ,IAAI,CAACK,QAAQ,GAAGJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,MAAM;EAEhCN,IAAI,CAACO,MAAM,GAAGP,IAAI,CAACO,MAAM,IAAIJ,IAAI,CAACK,EAAE,EAAE;EACtCR,IAAI,CAACS,WAAW,GAAGT,IAAI,CAACS,WAAW,IAAIN,IAAI,CAACM,WAAW,EAAE;EAEzDT,IAAI,CAACU,MAAM,GAAG,IAAIC,IAAI,EAAE;EAExB,IAAMC,MAAM,GAAGb,SAAS,CAACc,KAAK,CAACC,qBAAqB,IAAI,EAAE;EAC1D,IAAIF,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;IACrBf,IAAI,CAACgB,SAAS,GAAG;MAAEF,qBAAqB,EAAEF;IAAM,CAAE;;EAGpD,IAAMK,OAAO,GAAa,EAAE;EAC5B,IAAMC,SAAS,GAAa,EAAE;EAE9B,KAAK,IAAMC,GAAG,IAAIjB,YAAY,EAAE;IAC9B,IAAMkB,WAAW,GAAGlB,YAAY,CAACiB,GAAG,CAAC;IACrC,IAAIA,GAAG,KAAK,YAAY,EAAE;MACxBF,OAAO,CAACI,IAAI,CAACF,GAAG,CAAC;;IAEnB,IAAIC,WAAW,CAACE,cAAc,KAAK,SAAS,EAAE;MAC5CL,OAAO,CAACI,IAAI,CAACF,GAAG,CAAC;;IAEnB,IAAIC,WAAW,CAACE,cAAc,KAAK,WAAW,EAAE;MAC9CJ,SAAS,CAACG,IAAI,CAACF,GAAG,CAAC;;;EAIvB;EACA;EACA,KAAgC,IAAAI,EAAA,IAAqC,EAArCC,EAAA,IAAAvB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEwB,qBAAqB,KAAI,EAAE,EAArCF,EAAA,GAAAC,EAAA,CAAAT,MAAqC,EAArCQ,EAAA,EAAqC,EAAE;IAAlE,IAAMG,iBAAiB,GAAAF,EAAA,CAAAD,EAAA;IAC1B,IAAI,CAACL,SAAS,CAACS,QAAQ,CAACD,iBAAiB,CAAC,EAAE;MAC1CR,SAAS,CAACG,IAAI,CAACK,iBAAiB,CAAC;;;EAIrC,IAAME,SAAS,GAAG,CAAAC,EAAA,GAAA5B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE6B,qBAAqB,cAAAD,EAAA,cAAAA,EAAA,GAAI,EAAE;EACvD,IAAME,gBAAgB,GAAa,EAAE;EAErCd,OAAO,CAACe,IAAI,EAAE,CAACC,OAAO,CAAC,UAACC,IAAI;;IAC1B;IAAC,CAAC,CAAAL,EAAA,GAAAD,SAAS,CAACM,IAAI,CAAC,cAAAL,EAAA,cAAAA,EAAA,GAAI,EAAE,EAAEI,OAAO,CAAC,UAACzB,EAAE;MAClCuB,gBAAgB,CAACV,IAAI,CAACb,EAAE,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAI,CAAAP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkC,kBAAkB,MAAK,KAAK,EAAE;IAC1CnC,IAAI,CAACgB,SAAS,GAAAoB,QAAA,CAAAA,QAAA,KACTpC,IAAI,CAACgB,SAAS;MACjBC,OAAO,EAAEA,OAAO,CAACe,IAAI,EAAE;MACvBd,SAAS,EAAEA,SAAS,CAACc,IAAI,EAAE;MAC3BK,UAAU,EAAEN;IAAgB,EAC7B;;EAGH,OAAO/B,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}