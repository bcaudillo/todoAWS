{"ast":null,"code":"/**\n * Event Emitter that takes the expected contract as a generic\n * @example\n * ```ts\n *  type Contract = {\n *    delivery_success: [DeliverySuccessResponse, Metrics],\n *    delivery_failure: [DeliveryError]\n * }\n *  new Emitter<Contract>()\n *  .on('delivery_success', (res, metrics) => ...)\n *  .on('delivery_failure', (err) => ...)\n * ```\n */\nvar Emitter = /** @class */function () {\n  function Emitter(options) {\n    var _a;\n    this.callbacks = {};\n    this.warned = false;\n    this.maxListeners = (_a = options === null || options === void 0 ? void 0 : options.maxListeners) !== null && _a !== void 0 ? _a : 10;\n  }\n  Emitter.prototype.warnIfPossibleMemoryLeak = function (event) {\n    if (this.warned) {\n      return;\n    }\n    if (this.maxListeners && this.callbacks[event].length > this.maxListeners) {\n      console.warn(\"Event Emitter: Possible memory leak detected; \".concat(String(event), \" has exceeded \").concat(this.maxListeners, \" listeners.\"));\n      this.warned = true;\n    }\n  };\n  Emitter.prototype.on = function (event, callback) {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = [callback];\n    } else {\n      this.callbacks[event].push(callback);\n      this.warnIfPossibleMemoryLeak(event);\n    }\n    return this;\n  };\n  Emitter.prototype.once = function (event, callback) {\n    var _this = this;\n    var on = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      _this.off(event, on);\n      callback.apply(_this, args);\n    };\n    this.on(event, on);\n    return this;\n  };\n  Emitter.prototype.off = function (event, callback) {\n    var _a;\n    var fns = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n    var without = fns.filter(function (fn) {\n      return fn !== callback;\n    });\n    this.callbacks[event] = without;\n    return this;\n  };\n  Emitter.prototype.emit = function (event) {\n    var _this = this;\n    var _a;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var callbacks = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n    callbacks.forEach(function (callback) {\n      callback.apply(_this, args);\n    });\n    return this;\n  };\n  return Emitter;\n}();\nexport { Emitter };","map":{"version":3,"names":["Emitter","options","callbacks","warned","maxListeners","_a","prototype","warnIfPossibleMemoryLeak","event","length","console","warn","concat","String","on","callback","push","once","_this","args","_i","arguments","off","apply","fns","without","filter","fn","emit","forEach"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-generic-utils/src/emitter/emitter.ts"],"sourcesContent":["type EventName = string\ntype EventFnArgs = any[]\ntype EmitterContract = Record<EventName, EventFnArgs>\n\nexport interface EmitterOptions {\n  /** How many event listeners for a particular event before emitting a warning (0 = disabled)\n   *  @default 10\n   **/\n  maxListeners?: number\n}\n\n/**\n * Event Emitter that takes the expected contract as a generic\n * @example\n * ```ts\n *  type Contract = {\n *    delivery_success: [DeliverySuccessResponse, Metrics],\n *    delivery_failure: [DeliveryError]\n * }\n *  new Emitter<Contract>()\n *  .on('delivery_success', (res, metrics) => ...)\n *  .on('delivery_failure', (err) => ...)\n * ```\n */\nexport class Emitter<Contract extends EmitterContract = EmitterContract> {\n  maxListeners: number\n  constructor(options?: EmitterOptions) {\n    this.maxListeners = options?.maxListeners ?? 10\n  }\n  private callbacks: Partial<Contract> = {}\n  private warned = false\n\n  private warnIfPossibleMemoryLeak<EventName extends keyof Contract>(\n    event: EventName\n  ) {\n    if (this.warned) {\n      return\n    }\n    if (\n      this.maxListeners &&\n      this.callbacks[event]!.length > this.maxListeners\n    ) {\n      console.warn(\n        `Event Emitter: Possible memory leak detected; ${String(\n          event\n        )} has exceeded ${this.maxListeners} listeners.`\n      )\n      this.warned = true\n    }\n  }\n\n  on<EventName extends keyof Contract>(\n    event: EventName,\n    callback: (...args: Contract[EventName]) => void\n  ): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = [callback] as Contract[EventName]\n    } else {\n      this.callbacks[event]!.push(callback)\n      this.warnIfPossibleMemoryLeak(event)\n    }\n    return this\n  }\n\n  once<EventName extends keyof Contract>(\n    event: EventName,\n    callback: (...args: Contract[EventName]) => void\n  ): this {\n    const on = (...args: Contract[EventName]): void => {\n      this.off(event, on)\n      callback.apply(this, args)\n    }\n\n    this.on(event, on)\n    return this\n  }\n\n  off<EventName extends keyof Contract>(\n    event: EventName,\n    callback: (...args: Contract[EventName]) => void\n  ): this {\n    const fns = this.callbacks[event] ?? []\n    const without = fns.filter((fn) => fn !== callback) as Contract[EventName]\n    this.callbacks[event] = without\n    return this\n  }\n\n  emit<EventName extends keyof Contract>(\n    event: EventName,\n    ...args: Contract[EventName]\n  ): this {\n    const callbacks = this.callbacks[event] ?? []\n    callbacks.forEach((callback) => {\n      callback.apply(this, args)\n    })\n    return this\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}