{"ast":null,"code":"import { __spreadArray } from \"tslib\";\n/**\n * @example\n * pick({ 'a': 1, 'b': '2', 'c': 3 }, ['a', 'c'])\n * => { 'a': 1, 'c': 3 }\n */\nexport function pick(object, keys) {\n  return Object.assign.apply(Object, __spreadArray([{}], keys.map(function (key) {\n    var _a;\n    if (object && Object.prototype.hasOwnProperty.call(object, key)) {\n      return _a = {}, _a[key] = object[key], _a;\n    }\n  }), false));\n}","map":{"version":3,"names":["pick","object","keys","Object","assign","apply","__spreadArray","map","key","prototype","hasOwnProperty","call","_a"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/lib/pick.ts"],"sourcesContent":["export function pick<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keys: readonly K[]\n): Pick<T, K>\n\nexport function pick<T extends Record<string, any>>(\n  object: T,\n  keys: string[]\n): Partial<T>\n\n/**\n * @example\n * pick({ 'a': 1, 'b': '2', 'c': 3 }, ['a', 'c'])\n * => { 'a': 1, 'c': 3 }\n */\nexport function pick<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keys: string[] | K[] | readonly K[]\n) {\n  return Object.assign(\n    {},\n    ...keys.map((key) => {\n      if (object && Object.prototype.hasOwnProperty.call(object, key)) {\n        return { [key]: object[key] }\n      }\n    })\n  )\n}\n"],"mappings":";AAUA;;;;;AAKA,OAAM,SAAUA,IAAIA,CAClBC,MAAS,EACTC,IAAmC;EAEnC,OAAOC,MAAM,CAACC,MAAM,CAAAC,KAAA,CAAbF,MAAM,EAAAG,aAAA,EACX,EAAE,GACCJ,IAAI,CAACK,GAAG,CAAC,UAACC,GAAG;;IACd,IAAIP,MAAM,IAAIE,MAAM,CAACM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACV,MAAM,EAAEO,GAAG,CAAC,EAAE;MAC/D,OAAAI,EAAA,OAASA,EAAA,CAACJ,GAAG,IAAGP,MAAM,CAACO,GAAG,CAAC,EAAAI,EAAA;;EAE/B,CAAC,CAAC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}