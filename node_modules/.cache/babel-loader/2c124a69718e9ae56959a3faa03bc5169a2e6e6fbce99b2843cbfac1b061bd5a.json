{"ast":null,"code":"import { __assign, __extends, __spreadArray } from \"tslib\";\nimport { PriorityQueue } from '.';\nimport { Context } from '../../core/context';\nimport { isBrowser } from '../../core/environment';\nvar loc = {\n  getItem: function () {},\n  setItem: function () {},\n  removeItem: function () {}\n};\ntry {\n  loc = isBrowser() && window.localStorage ? window.localStorage : loc;\n} catch (err) {\n  console.warn('Unable to access localStorage', err);\n}\nfunction persisted(key) {\n  var items = loc.getItem(key);\n  return (items ? JSON.parse(items) : []).map(function (p) {\n    return new Context(p.event, p.id);\n  });\n}\nfunction persistItems(key, items) {\n  var existing = persisted(key);\n  var all = __spreadArray(__spreadArray([], items, true), existing, true);\n  var merged = all.reduce(function (acc, item) {\n    var _a;\n    return __assign(__assign({}, acc), (_a = {}, _a[item.id] = item, _a));\n  }, {});\n  loc.setItem(key, JSON.stringify(Object.values(merged)));\n}\nfunction seen(key) {\n  var stored = loc.getItem(key);\n  return stored ? JSON.parse(stored) : {};\n}\nfunction persistSeen(key, memory) {\n  var stored = seen(key);\n  loc.setItem(key, JSON.stringify(__assign(__assign({}, stored), memory)));\n}\nfunction remove(key) {\n  loc.removeItem(key);\n}\nvar now = function () {\n  return new Date().getTime();\n};\nfunction mutex(key, onUnlock, attempt) {\n  if (attempt === void 0) {\n    attempt = 0;\n  }\n  var lockTimeout = 50;\n  var lockKey = \"persisted-queue:v1:\".concat(key, \":lock\");\n  var expired = function (lock) {\n    return new Date().getTime() > lock;\n  };\n  var rawLock = loc.getItem(lockKey);\n  var lock = rawLock ? JSON.parse(rawLock) : null;\n  var allowed = lock === null || expired(lock);\n  if (allowed) {\n    loc.setItem(lockKey, JSON.stringify(now() + lockTimeout));\n    onUnlock();\n    loc.removeItem(lockKey);\n    return;\n  }\n  if (!allowed && attempt < 3) {\n    setTimeout(function () {\n      mutex(key, onUnlock, attempt + 1);\n    }, lockTimeout);\n  } else {\n    console.error('Unable to retrieve lock');\n  }\n}\nvar PersistedPriorityQueue = /** @class */function (_super) {\n  __extends(PersistedPriorityQueue, _super);\n  function PersistedPriorityQueue(maxAttempts, key) {\n    var _this = _super.call(this, maxAttempts, []) || this;\n    var itemsKey = \"persisted-queue:v1:\".concat(key, \":items\");\n    var seenKey = \"persisted-queue:v1:\".concat(key, \":seen\");\n    var saved = [];\n    var lastSeen = {};\n    mutex(key, function () {\n      try {\n        saved = persisted(itemsKey);\n        lastSeen = seen(seenKey);\n        remove(itemsKey);\n        remove(seenKey);\n        _this.queue = __spreadArray(__spreadArray([], saved, true), _this.queue, true);\n        _this.seen = __assign(__assign({}, lastSeen), _this.seen);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    window.addEventListener('pagehide', function () {\n      // we deliberately want to use the less powerful 'pagehide' API to only persist on events where the analytics instance gets destroyed, and not on tab away.\n      if (_this.todo > 0) {\n        var items_1 = __spreadArray(__spreadArray([], _this.queue, true), _this.future, true);\n        try {\n          mutex(key, function () {\n            persistItems(itemsKey, items_1);\n            persistSeen(seenKey, _this.seen);\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    });\n    return _this;\n  }\n  return PersistedPriorityQueue;\n}(PriorityQueue);\nexport { PersistedPriorityQueue };","map":{"version":3,"names":["PriorityQueue","Context","isBrowser","loc","getItem","setItem","removeItem","window","localStorage","err","console","warn","persisted","key","items","JSON","parse","map","p","event","id","persistItems","existing","all","__spreadArray","merged","reduce","acc","item","__assign","_a","stringify","Object","values","seen","stored","persistSeen","memory","remove","now","Date","getTime","mutex","onUnlock","attempt","lockTimeout","lockKey","concat","expired","lock","rawLock","allowed","setTimeout","error","PersistedPriorityQueue","_super","__extends","maxAttempts","_this","call","itemsKey","seenKey","saved","lastSeen","queue","addEventListener","todo","items_1","future"],"sources":["/Users/bcaudillo/Desktop/Projects/todo/node_modules/@segment/analytics-next/src/lib/priority-queue/persisted.ts"],"sourcesContent":["import { PriorityQueue } from '.'\nimport { Context, SerializedContext } from '../../core/context'\nimport { isBrowser } from '../../core/environment'\n\nlet loc:\n  | Storage\n  | { getItem: () => void; setItem: () => void; removeItem: () => void } = {\n  getItem() {},\n  setItem() {},\n  removeItem() {},\n}\n\ntry {\n  loc = isBrowser() && window.localStorage ? window.localStorage : loc\n} catch (err) {\n  console.warn('Unable to access localStorage', err)\n}\n\nfunction persisted(key: string): Context[] {\n  const items = loc.getItem(key)\n  return (items ? JSON.parse(items) : []).map(\n    (p: SerializedContext) => new Context(p.event, p.id)\n  )\n}\n\nfunction persistItems(key: string, items: Context[]): void {\n  const existing = persisted(key)\n  const all = [...items, ...existing]\n\n  const merged = all.reduce((acc, item) => {\n    return {\n      ...acc,\n      [item.id]: item,\n    }\n  }, {} as Record<string, Context>)\n\n  loc.setItem(key, JSON.stringify(Object.values(merged)))\n}\n\nfunction seen(key: string): Record<string, number> {\n  const stored = loc.getItem(key)\n  return stored ? JSON.parse(stored) : {}\n}\n\nfunction persistSeen(key: string, memory: Record<string, number>): void {\n  const stored = seen(key)\n\n  loc.setItem(\n    key,\n    JSON.stringify({\n      ...stored,\n      ...memory,\n    })\n  )\n}\n\nfunction remove(key: string): void {\n  loc.removeItem(key)\n}\n\nconst now = (): number => new Date().getTime()\n\nfunction mutex(key: string, onUnlock: Function, attempt = 0): void {\n  const lockTimeout = 50\n  const lockKey = `persisted-queue:v1:${key}:lock`\n\n  const expired = (lock: number): boolean => new Date().getTime() > lock\n  const rawLock = loc.getItem(lockKey)\n  const lock = rawLock ? (JSON.parse(rawLock) as number) : null\n\n  const allowed = lock === null || expired(lock)\n  if (allowed) {\n    loc.setItem(lockKey, JSON.stringify(now() + lockTimeout))\n    onUnlock()\n    loc.removeItem(lockKey)\n    return\n  }\n\n  if (!allowed && attempt < 3) {\n    setTimeout(() => {\n      mutex(key, onUnlock, attempt + 1)\n    }, lockTimeout)\n  } else {\n    console.error('Unable to retrieve lock')\n  }\n}\n\nexport class PersistedPriorityQueue extends PriorityQueue<Context> {\n  constructor(maxAttempts: number, key: string) {\n    super(maxAttempts, [])\n\n    const itemsKey = `persisted-queue:v1:${key}:items`\n    const seenKey = `persisted-queue:v1:${key}:seen`\n\n    let saved: Context[] = []\n    let lastSeen: Record<string, number> = {}\n\n    mutex(key, () => {\n      try {\n        saved = persisted(itemsKey)\n        lastSeen = seen(seenKey)\n        remove(itemsKey)\n        remove(seenKey)\n\n        this.queue = [...saved, ...this.queue]\n        this.seen = { ...lastSeen, ...this.seen }\n      } catch (err) {\n        console.error(err)\n      }\n    })\n\n    window.addEventListener('pagehide', () => {\n      // we deliberately want to use the less powerful 'pagehide' API to only persist on events where the analytics instance gets destroyed, and not on tab away.\n      if (this.todo > 0) {\n        const items = [...this.queue, ...this.future]\n        try {\n          mutex(key, () => {\n            persistItems(itemsKey, items)\n            persistSeen(seenKey, this.seen)\n          })\n        } catch (err) {\n          console.error(err)\n        }\n      }\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}